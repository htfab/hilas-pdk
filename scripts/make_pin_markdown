#! /usr/bin/env python3

import sys
import os
import argparse
import glob
import re
from pathlib import Path

DEFAULT_DEST = 'README.md'
DEFAULT_TARGETS = glob.glob('./*.mag')

matcher = re.compile(r'^\s*[rf]label\s+(\S+).*\s+(\S+)\s*\n\s*port\s+(\d+)\s+(.*)$', re.MULTILINE)


def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('--md_output', '-o', action='store', help='output markdown file', default=DEFAULT_DEST)
    ap.add_argument('--magic_files', '-m', nargs='*', action='store', help='output markdown file',
                    default=DEFAULT_TARGETS)
    args = ap.parse_args()

    tables = [['# Cell Ports Summary\n']]
    for targ in args.magic_files:
        cn = Path(targ).stem
        head = ['___\n### {}\n'.format(cn.replace('_','\_'))]
        head.append('| {:<20} | {:<20} | {:<20} | {:<20} |'.format('Port Number', 'Label', 'Layer', 'Attributes'))
        head.append('|----------------------|----------------------|----------------------|----------------------|')
        rows = []
        with open(targ, 'r') as f:
            c = f.read()
        matches = re.findall(matcher, c)
        matches = sorted(list(set(matches)), key=lambda x: int(x[2]))
        for m in matches:
            rows.append('| {:<20} | {:<20} | {:<20} | {:<20} |'.format(m[2], m[1], m[0], ','.join(m[3].split())))
        # if rows:
        tables.append(head + rows + ['\n'])

    md = '\n'.join(['\n'.join(table) for table in tables])
    # print(md)

    with open(args.md_output, 'w') as f:
        f.write(md)

    print('markdown written to {}'.format(args.md_output))


if __name__ == '__main__':
    sys.exit(main())
