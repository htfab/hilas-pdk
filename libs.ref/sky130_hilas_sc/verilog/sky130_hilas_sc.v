/** Copyright 2020 The Hilas PDK Authors
 * 
 * This file is part of HILAS.
 * 
 * HILAS is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, version 3 of the License.
 * 
 * HILAS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with HILAS.  If not, see <https://www.gnu.org/licenses/>.
 * 
 * Licensed under the Lesser General Public License, Version 3.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * https://www.gnu.org/licenses/lgpl-3.0.en.html
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * SPDX-License-Identifier: LGPL-3.0
 * 
 * 
 */




`define USE_POWER_PINS 1

`ifndef SKY130_HILAS_POLY2M1
`define SKY130_HILAS_POLY2M1

/**
 * sky130_hilas_poly2m1: polysilicon layer to m1 contact
 *
 * Verilog wrapper for sky130_hilas_poly2m1.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_poly2m1 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_poly2m1 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_POLY2M1


//--------EOF---------

`ifndef SKY130_HILAS_TA2CELL_1FG_STRONG
`define SKY130_HILAS_TA2CELL_1FG_STRONG

/**
 * sky130_hilas_TA2Cell_1FG_Strong: Two transimpedance amps with one (of two) amplifiers using floating-gate inputs. FG amplifier with normal linear range.
 *
 * Verilog wrapper for sky130_hilas_TA2Cell_1FG_Strong.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TA2Cell_1FG_Strong (
    VTUN,
    PROG,
    GATE1,
    VIN11,
    VINJ,
    VIN22,
    VIN21,
    OUTPUT2,
    OUTPUT1,
    GATESEL1,
    GATESEL2,
    DRAIN1,
    DRAIN2,
    VIN12,
    GATE2,
    RUN,
    VPWR,
    VGND,
    VNB,
    VPB
);
        inout VTUN;
        inout PROG;
        inout GATE1;
        inout VIN11;
        inout VINJ;
        inout VIN22;
        inout VIN21;
        inout OUTPUT2;
        inout OUTPUT1;
        inout GATESEL1;
        inout GATESEL2;
        inout DRAIN1;
        inout DRAIN2;
        inout VIN12;
        inout GATE2;
        inout RUN;
        inout VPWR;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TA2Cell_1FG_Strong (
    VTUN,
    PROG,
    GATE1,
    VIN11,
    VINJ,
    VIN22,
    VIN21,
    OUTPUT2,
    OUTPUT1,
    GATESEL1,
    GATESEL2,
    DRAIN1,
    DRAIN2,
    VIN12,
    GATE2,
    RUN
);
        inout VTUN;
        inout PROG;
        inout GATE1;
        inout VIN11;
        inout VINJ;
        inout VIN22;
        inout VIN21;
        inout OUTPUT2;
        inout OUTPUT1;
        inout GATESEL1;
        inout GATESEL2;
        inout DRAIN1;
        inout DRAIN2;
        inout VIN12;
        inout GATE2;
        inout RUN;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TA2CELL_1FG_STRONG


//--------EOF---------

`ifndef SKY130_HILAS_NMIRROR03
`define SKY130_HILAS_NMIRROR03

/**
 * sky130_hilas_nMirror03: None
 *
 * Verilog wrapper for sky130_hilas_nMirror03.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nMirror03 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nMirror03 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NMIRROR03


//--------EOF---------

`ifndef SKY130_HILAS_PFETMIRROR
`define SKY130_HILAS_PFETMIRROR

/**
 * sky130_hilas_pFETmirror: pFET current mirror
 *
 * Verilog wrapper for sky130_hilas_pFETmirror.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETmirror (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETmirror (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETMIRROR


//--------EOF---------

`ifndef SKY130_HILAS_FGCHARACTERIZATION01
`define SKY130_HILAS_FGCHARACTERIZATION01

/**
 * sky130_hilas_FGcharacterization01: FG test strucure that uses a capacitor around a transconductance amplifier
 *
 * Verilog wrapper for sky130_hilas_FGcharacterization01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGcharacterization01 (
    VTUN,
    GATE1,
    GATE3,
    VTUNOVERLAP01,
    GATE2,
    GATE4,
    LARGECAPACITOR,
    VINJ,
    OUTPUT,
    VREF,
    VBIAS,
    DRAIN1,
    SOURCE1,
    VGND,
    VNB,
    VPB
);
        inout VTUN;
        inout GATE1;
        inout GATE3;
        inout VTUNOVERLAP01;
        inout GATE2;
        inout GATE4;
        inout LARGECAPACITOR;
        inout VINJ;
        inout OUTPUT;
        inout VREF;
        inout VBIAS;
        inout DRAIN1;
        inout SOURCE1;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGcharacterization01 (
    VTUN,
    GATE1,
    GATE3,
    VTUNOVERLAP01,
    GATE2,
    GATE4,
    LARGECAPACITOR,
    VINJ,
    OUTPUT,
    VREF,
    VBIAS,
    DRAIN1,
    SOURCE1
);
        inout VTUN;
        inout GATE1;
        inout GATE3;
        inout VTUNOVERLAP01;
        inout GATE2;
        inout GATE4;
        inout LARGECAPACITOR;
        inout VINJ;
        inout OUTPUT;
        inout VREF;
        inout VBIAS;
        inout DRAIN1;
        inout SOURCE1;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_FGCHARACTERIZATION01


//--------EOF---------

`ifndef SKY130_HILAS_NFET03
`define SKY130_HILAS_NFET03

/**
 * sky130_hilas_nFET03: None
 *
 * Verilog wrapper for sky130_hilas_nFET03.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFET03 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFET03 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NFET03


//--------EOF---------

`ifndef SKY130_HILAS_NOVERLAPCAP01
`define SKY130_HILAS_NOVERLAPCAP01

/**
 * sky130_hilas_nOverlapCap01: overlap capacitor based capacitor (nFET)
 *
 * Verilog wrapper for sky130_hilas_nOverlapCap01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nOverlapCap01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nOverlapCap01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NOVERLAPCAP01


//--------EOF---------

`ifndef SKY130_HILAS_DAC6TRANSISTORSTACK01C
`define SKY130_HILAS_DAC6TRANSISTORSTACK01C

/**
 * sky130_hilas_DAC6TransistorStack01c: None
 *
 * Verilog wrapper for sky130_hilas_DAC6TransistorStack01c.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6TransistorStack01c (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6TransistorStack01c (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DAC6TRANSISTORSTACK01C


//--------EOF---------

`ifndef SKY130_HILAS_TGATESINGLE01PART2
`define SKY130_HILAS_TGATESINGLE01PART2

/**
 * sky130_hilas_TgateSingle01Part2: None
 *
 * Verilog wrapper for sky130_hilas_TgateSingle01Part2.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateSingle01Part2 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateSingle01Part2 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TGATESINGLE01PART2


//--------EOF---------

`ifndef SKY130_HILAS_TA2CELL_NOFG
`define SKY130_HILAS_TA2CELL_NOFG

/**
 * sky130_hilas_TA2Cell_NoFG: Two transimpedane amplifiers with no floating-gate inputs.
 *
 * Verilog wrapper for sky130_hilas_TA2Cell_NoFG.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TA2Cell_NoFG (
    COLSEL1,
    VIN12,
    VIN21,
    VIN22,
    OUTPUT1,
    OUTPUT2,
    DRAIN1,
    DRAIN2,
    VTUN,
    GATE1,
    VINJ,
    VIN11,
    VGND,
    VPWR,
    VNB,
    VPB
);
        inout COLSEL1;
        inout VIN12;
        inout VIN21;
        inout VIN22;
        inout OUTPUT1;
        inout OUTPUT2;
        inout DRAIN1;
        inout DRAIN2;
        inout VTUN;
        inout GATE1;
        inout VINJ;
        inout VIN11;
        inout VGND;
        inout VPWR;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TA2Cell_NoFG (
    COLSEL1,
    VIN12,
    VIN21,
    VIN22,
    OUTPUT1,
    OUTPUT2,
    DRAIN1,
    DRAIN2,
    VTUN,
    GATE1,
    VINJ,
    VIN11
);
        inout COLSEL1;
        inout VIN12;
        inout VIN21;
        inout VIN22;
        inout OUTPUT1;
        inout OUTPUT2;
        inout DRAIN1;
        inout DRAIN2;
        inout VTUN;
        inout GATE1;
        inout VINJ;
        inout VIN11;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TA2CELL_NOFG


//--------EOF---------

`ifndef SKY130_HILAS_TOPLEVELTEXTSTRUCTURE
`define SKY130_HILAS_TOPLEVELTEXTSTRUCTURE

/**
 * sky130_hilas_TopLevelTextStructure: top level test structure
 *
 * Verilog wrapper for sky130_hilas_TopLevelTextStructure.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TopLevelTextStructure (
    DIG23,
    DIG22,
    DIG21,
    DIG29,
    DIG28,
    DIG27,
    DIG26,
    DIG25,
    DIG17,
    DIG16,
    DIG15,
    DIG14,
    DIG13,
    DIG12,
    DIG11,
    DIG10,
    DIG09,
    DIG08,
    DIG07,
    DIG06,
    DIG05,
    DIG04,
    DIG03,
    DIG02,
    DIG01,
    DRAINOUT,
    ROWTERM2,
    COLUMN2,
    COLUMN1,
    GATE2,
    DRAININJECT,
    VTUN,
    LARGECAPACITOR,
    DRAIN6N,
    DRAIN6P,
    DRAIN5P,
    DARIN4P,
    DRAIN5N,
    DRAIN4N,
    DRAIN3P,
    DRAIN2P,
    DRAIN3N,
    SOURCEP,
    GATE1,
    VINJ,
    VGND,
    VPWR,
    VNB,
    VPB
);
        inout DIG23;
        inout DIG22;
        inout DIG21;
        inout DIG29;
        inout DIG28;
        inout DIG27;
        inout DIG26;
        inout DIG25;
        inout DIG17;
        inout DIG16;
        inout DIG15;
        inout DIG14;
        inout DIG13;
        inout DIG12;
        inout DIG11;
        inout DIG10;
        inout DIG09;
        inout DIG08;
        inout DIG07;
        inout DIG06;
        inout DIG05;
        inout DIG04;
        inout DIG03;
        inout DIG02;
        inout DIG01;
        inout DRAINOUT;
        inout ROWTERM2;
        inout COLUMN2;
        inout COLUMN1;
        inout GATE2;
        inout DRAININJECT;
        inout VTUN;
        inout LARGECAPACITOR;
        inout DRAIN6N;
        inout DRAIN6P;
        inout DRAIN5P;
        inout DARIN4P;
        inout DRAIN5N;
        inout DRAIN4N;
        inout DRAIN3P;
        inout DRAIN2P;
        inout DRAIN3N;
        inout SOURCEP;
        inout GATE1;
        inout VINJ;
        inout VGND;
        inout VPWR;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TopLevelTextStructure (
    DIG23,
    DIG22,
    DIG21,
    DIG29,
    DIG28,
    DIG27,
    DIG26,
    DIG25,
    DIG17,
    DIG16,
    DIG15,
    DIG14,
    DIG13,
    DIG12,
    DIG11,
    DIG10,
    DIG09,
    DIG08,
    DIG07,
    DIG06,
    DIG05,
    DIG04,
    DIG03,
    DIG02,
    DIG01,
    DRAINOUT,
    ROWTERM2,
    COLUMN2,
    COLUMN1,
    GATE2,
    DRAININJECT,
    VTUN,
    LARGECAPACITOR,
    DRAIN6N,
    DRAIN6P,
    DRAIN5P,
    DARIN4P,
    DRAIN5N,
    DRAIN4N,
    DRAIN3P,
    DRAIN2P,
    DRAIN3N,
    SOURCEP,
    GATE1,
    VINJ
);
        inout DIG23;
        inout DIG22;
        inout DIG21;
        inout DIG29;
        inout DIG28;
        inout DIG27;
        inout DIG26;
        inout DIG25;
        inout DIG17;
        inout DIG16;
        inout DIG15;
        inout DIG14;
        inout DIG13;
        inout DIG12;
        inout DIG11;
        inout DIG10;
        inout DIG09;
        inout DIG08;
        inout DIG07;
        inout DIG06;
        inout DIG05;
        inout DIG04;
        inout DIG03;
        inout DIG02;
        inout DIG01;
        inout DRAINOUT;
        inout ROWTERM2;
        inout COLUMN2;
        inout COLUMN1;
        inout GATE2;
        inout DRAININJECT;
        inout VTUN;
        inout LARGECAPACITOR;
        inout DRAIN6N;
        inout DRAIN6P;
        inout DRAIN5P;
        inout DARIN4P;
        inout DRAIN5N;
        inout DRAIN4N;
        inout DRAIN3P;
        inout DRAIN2P;
        inout DRAIN3N;
        inout SOURCEP;
        inout GATE1;
        inout VINJ;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TOPLEVELTEXTSTRUCTURE


//--------EOF---------

`ifndef SKY130_HILAS_PFETLARGE
`define SKY130_HILAS_PFETLARGE

/**
 * sky130_hilas_pFETLarge: Single Large (W/L=100) pFET Transistor
 *
 * Verilog wrapper for sky130_hilas_pFETLarge.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETLarge (
    GATE,
    SOURCE,
    DRAIN,
    WELL,
    VNB,
    VPB
);
        inout GATE;
        inout SOURCE;
        inout DRAIN;
        inout WELL;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETLarge (
    GATE,
    SOURCE,
    DRAIN,
    WELL
);
        inout GATE;
        inout SOURCE;
        inout DRAIN;
        inout WELL;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETLARGE


//--------EOF---------

`ifndef SKY130_HILAS_VINJINV2
`define SKY130_HILAS_VINJINV2

/**
 * sky130_hilas_VinjInv2: logical inverter for VINJ-level voltages
 *
 * Verilog wrapper for sky130_hilas_VinjInv2.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_VinjInv2 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_VinjInv2 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_VINJINV2


//--------EOF---------

`ifndef SKY130_HILAS_DECOUPVINJ00
`define SKY130_HILAS_DECOUPVINJ00

/**
 * sky130_hilas_DecoupVinj00: 
 *
 * Verilog wrapper for sky130_hilas_DecoupVinj00.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DecoupVinj00 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DecoupVinj00 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DECOUPVINJ00


//--------EOF---------

`ifndef SKY130_HILAS_LI2M2
`define SKY130_HILAS_LI2M2

/**
 * sky130_hilas_li2m2: local interconnect to m2 contact
 *
 * Verilog wrapper for sky130_hilas_li2m2.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_li2m2 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_li2m2 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_LI2M2


//--------EOF---------

`ifndef SKY130_HILAS_CAPACITORSIZE03
`define SKY130_HILAS_CAPACITORSIZE03

/**
 * sky130_hilas_capacitorSize03: mid-large cap
 *
 * Verilog wrapper for sky130_hilas_capacitorSize03.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorSize03 (
    CAPTERM02,
    CAPTERM01,
    VNB,
    VPB
);
        inout CAPTERM02;
        inout CAPTERM01;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorSize03 (
    CAPTERM02,
    CAPTERM01
);
        inout CAPTERM02;
        inout CAPTERM01;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CAPACITORSIZE03


//--------EOF---------

`ifndef SKY130_HILAS_SWC4X1BIASCELL
`define SKY130_HILAS_SWC4X1BIASCELL

/**
 * sky130_hilas_swc4x1BiasCell: 4x1 array of FG switch cell configured pFET as current sources
 *
 * Verilog wrapper for sky130_hilas_swc4x1BiasCell.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x1BiasCell (
    ROW1,
    ROW2,
    ROW3,
    ROW4,
    VTUN,
    GATE1,
    VINJ,
    COLSEL1,
    DRAIN3,
    DRAIN4,
    DRAIN1,
    DRAIN2,
    VPWR,
    VGND,
    VNB,
    VPB
);
        inout ROW1;
        inout ROW2;
        inout ROW3;
        inout ROW4;
        inout VTUN;
        inout GATE1;
        inout VINJ;
        inout COLSEL1;
        inout DRAIN3;
        inout DRAIN4;
        inout DRAIN1;
        inout DRAIN2;
        inout VPWR;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x1BiasCell (
    ROW1,
    ROW2,
    ROW3,
    ROW4,
    VTUN,
    GATE1,
    VINJ,
    COLSEL1,
    DRAIN3,
    DRAIN4,
    DRAIN1,
    DRAIN2
);
        inout ROW1;
        inout ROW2;
        inout ROW3;
        inout ROW4;
        inout VTUN;
        inout GATE1;
        inout VINJ;
        inout COLSEL1;
        inout DRAIN3;
        inout DRAIN4;
        inout DRAIN1;
        inout DRAIN2;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_SWC4X1BIASCELL


//--------EOF---------

`ifndef SKY130_HILAS_STEPUPDIGITALPART1
`define SKY130_HILAS_STEPUPDIGITALPART1

/**
 * sky130_hilas_StepUpDigitalPart1: step-up level shifter part
 *
 * Verilog wrapper for sky130_hilas_StepUpDigitalPart1.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_StepUpDigitalPart1 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_StepUpDigitalPart1 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_STEPUPDIGITALPART1


//--------EOF---------

`ifndef SKY130_HILAS_PFETDEVICE01E
`define SKY130_HILAS_PFETDEVICE01E

/**
 * sky130_hilas_pFETdevice01e: pFET transistor used in DAC block
 *
 * Verilog wrapper for sky130_hilas_pFETdevice01e.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01e (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01e (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETDEVICE01E


//--------EOF---------

`ifndef SKY130_HILAS_PFETDEVICE01AA
`define SKY130_HILAS_PFETDEVICE01AA

/**
 * sky130_hilas_pFETdevice01aa: pFET transistor used in DAC block
 *
 * Verilog wrapper for sky130_hilas_pFETdevice01aa.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01aa (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01aa (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETDEVICE01AA


//--------EOF---------

`ifndef SKY130_HILAS_CAPMODULE02
`define SKY130_HILAS_CAPMODULE02

/**
 * sky130_hilas_CapModule02: None
 *
 * Verilog wrapper for sky130_hilas_CapModule02.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_CapModule02 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_CapModule02 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CAPMODULE02


//--------EOF---------

`ifndef SKY130_HILAS_FGTRANS2X1CELL
`define SKY130_HILAS_FGTRANS2X1CELL

/**
 * sky130_hilas_FGtrans2x1cell: None
 *
 * Verilog wrapper for sky130_hilas_FGtrans2x1cell.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGtrans2x1cell (
    COL1,
    COLSEL1,
    DRAIN1,
    DRAIN2,
    GATE1,
    PROG,
    ROW1,
    ROW2,
    RUN,
    VIN1,
    VIN2,
    VINJ,
    VTUN,
    VGND,
    VNB,
    VPB
);
        inout COL1;
        inout COLSEL1;
        inout DRAIN1;
        inout DRAIN2;
        inout GATE1;
        inout PROG;
        inout ROW1;
        inout ROW2;
        inout RUN;
        inout VIN1;
        inout VIN2;
        inout VINJ;
        inout VTUN;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGtrans2x1cell (
    COL1,
    COLSEL1,
    DRAIN1,
    DRAIN2,
    GATE1,
    PROG,
    ROW1,
    ROW2,
    RUN,
    VIN1,
    VIN2,
    VINJ,
    VTUN
);
        inout COL1;
        inout COLSEL1;
        inout DRAIN1;
        inout DRAIN2;
        inout GATE1;
        inout PROG;
        inout ROW1;
        inout ROW2;
        inout RUN;
        inout VIN1;
        inout VIN2;
        inout VINJ;
        inout VTUN;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_FGTRANS2X1CELL


//--------EOF---------

`ifndef SKY130_HILAS_CAPMODULE01A
`define SKY130_HILAS_CAPMODULE01A

/**
 * sky130_hilas_CapModule01a: primitive cap, variant 01a
 *
 * Verilog wrapper for sky130_hilas_CapModule01a.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_CapModule01a (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_CapModule01a (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CAPMODULE01A


//--------EOF---------

`ifndef SKY130_HILAS_CAPACITORSIZE01
`define SKY130_HILAS_CAPACITORSIZE01

/**
 * sky130_hilas_capacitorSize01: smallest cap
 *
 * Verilog wrapper for sky130_hilas_capacitorSize01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorSize01 (
    CAPTERM02,
    CAPTERM01,
    VNB,
    VPB
);
        inout CAPTERM02;
        inout CAPTERM01;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorSize01 (
    CAPTERM02,
    CAPTERM01
);
        inout CAPTERM02;
        inout CAPTERM01;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CAPACITORSIZE01


//--------EOF---------

`ifndef SKY130_HILAS_PFETDEVICE01
`define SKY130_HILAS_PFETDEVICE01

/**
 * sky130_hilas_pFETdevice01: pFET transistor used in DAC block
 *
 * Verilog wrapper for sky130_hilas_pFETdevice01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETDEVICE01


//--------EOF---------

`ifndef SKY130_HILAS_TGATE4DOUBLE01
`define SKY130_HILAS_TGATE4DOUBLE01

/**
 * sky130_hilas_Tgate4Double01: 4 double-throw transmission gates
 *
 * Verilog wrapper for sky130_hilas_Tgate4Double01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_Tgate4Double01 (
    INPUT1_1,
    SELECT1,
    SELECT2,
    INPUT2_2,
    INPUT1_2,
    SELECT3,
    INPUT2_3,
    SELECT4,
    INPUT2_4,
    INPUT1_4,
    OUTPUT4,
    OUTPUT3,
    OUTPUT2,
    OUTPUT1,
    INPUT2_1,
    INPUT1_3,
    VGND,
    VPWR,
    VNB,
    VPB
);
        inout INPUT1_1;
        inout SELECT1;
        inout SELECT2;
        inout INPUT2_2;
        inout INPUT1_2;
        inout SELECT3;
        inout INPUT2_3;
        inout SELECT4;
        inout INPUT2_4;
        inout INPUT1_4;
        inout OUTPUT4;
        inout OUTPUT3;
        inout OUTPUT2;
        inout OUTPUT1;
        inout INPUT2_1;
        inout INPUT1_3;
        inout VGND;
        inout VPWR;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_Tgate4Double01 (
    INPUT1_1,
    SELECT1,
    SELECT2,
    INPUT2_2,
    INPUT1_2,
    SELECT3,
    INPUT2_3,
    SELECT4,
    INPUT2_4,
    INPUT1_4,
    OUTPUT4,
    OUTPUT3,
    OUTPUT2,
    OUTPUT1,
    INPUT2_1,
    INPUT1_3
);
        inout INPUT1_1;
        inout SELECT1;
        inout SELECT2;
        inout INPUT2_2;
        inout INPUT1_2;
        inout SELECT3;
        inout INPUT2_3;
        inout SELECT4;
        inout INPUT2_4;
        inout INPUT1_4;
        inout OUTPUT4;
        inout OUTPUT3;
        inout OUTPUT2;
        inout OUTPUT1;
        inout INPUT2_1;
        inout INPUT1_3;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TGATE4DOUBLE01


//--------EOF---------

`ifndef SKY130_HILAS_TGATEVINJ01
`define SKY130_HILAS_TGATEVINJ01

/**
 * sky130_hilas_TgateVinj01: None
 *
 * Verilog wrapper for sky130_hilas_TgateVinj01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateVinj01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateVinj01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TGATEVINJ01


//--------EOF---------

`ifndef SKY130_HILAS_CELLATTEMPT01
`define SKY130_HILAS_CELLATTEMPT01

/**
 * sky130_hilas_cellAttempt01: 4x1 array of FG switch cell, Varactor capacitor cell
 *
 * Verilog wrapper for sky130_hilas_cellAttempt01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_cellAttempt01 (
    VTUN,
    VINJ,
    COLSEL1,
    COL1,
    GATE1,
    ROW4,
    DRAIN4,
    DRAIN1,
    ROW1,
    ROW3,
    DRAIN3,
    DRAIN2,
    ROW2,
    VGND,
    VNB,
    VPB
);
        inout VTUN;
        inout VINJ;
        inout COLSEL1;
        inout COL1;
        inout GATE1;
        inout ROW4;
        inout DRAIN4;
        inout DRAIN1;
        inout ROW1;
        inout ROW3;
        inout DRAIN3;
        inout DRAIN2;
        inout ROW2;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_cellAttempt01 (
    VTUN,
    VINJ,
    COLSEL1,
    COL1,
    GATE1,
    ROW4,
    DRAIN4,
    DRAIN1,
    ROW1,
    ROW3,
    DRAIN3,
    DRAIN2,
    ROW2
);
        inout VTUN;
        inout VINJ;
        inout COLSEL1;
        inout COL1;
        inout GATE1;
        inout ROW4;
        inout DRAIN4;
        inout DRAIN1;
        inout ROW1;
        inout ROW3;
        inout DRAIN3;
        inout DRAIN2;
        inout ROW2;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CELLATTEMPT01


//--------EOF---------

`ifndef SKY130_HILAS_M22M4
`define SKY130_HILAS_M22M4

/**
 * sky130_hilas_m22m4: m2 to m4 contact
 *
 * Verilog wrapper for sky130_hilas_m22m4.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_m22m4 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_m22m4 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_M22M4


//--------EOF---------

`ifndef SKY130_HILAS_POLY2M2
`define SKY130_HILAS_POLY2M2

/**
 * sky130_hilas_poly2m2: polysilicon layer to m2 contact
 *
 * Verilog wrapper for sky130_hilas_poly2m2.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_poly2m2 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_poly2m2 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_POLY2M2


//--------EOF---------

`ifndef SKY130_HILAS_TACOREBLOCK
`define SKY130_HILAS_TACOREBLOCK

/**
 * sky130_hilas_TACoreBlock: None
 *
 * Verilog wrapper for sky130_hilas_TACoreBlock.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TACoreBlock (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TACoreBlock (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TACOREBLOCK


//--------EOF---------

`ifndef SKY130_HILAS_PFETDEVICE01B
`define SKY130_HILAS_PFETDEVICE01B

/**
 * sky130_hilas_pFETdevice01b: pFET transistor used in DAC block
 *
 * Verilog wrapper for sky130_hilas_pFETdevice01b.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01b (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01b (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETDEVICE01B


//--------EOF---------

`ifndef SKY130_HILAS_STEPUPDIGITAL
`define SKY130_HILAS_STEPUPDIGITAL

/**
 * sky130_hilas_StepUpDigital: a single level shifter
 *
 * Verilog wrapper for sky130_hilas_StepUpDigital.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_StepUpDigital (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_StepUpDigital (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_STEPUPDIGITAL


//--------EOF---------

`ifndef SKY130_HILAS_RESISTOR01
`define SKY130_HILAS_RESISTOR01

/**
 * sky130_hilas_resistor01: 
 *
 * Verilog wrapper for sky130_hilas_resistor01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_resistor01 (
    TERM1,
    TERM2,
    VGND,
    VNB,
    VPB
);
        inout TERM1;
        inout TERM2;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_resistor01 (
    TERM1,
    TERM2
);
        inout TERM1;
        inout TERM2;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_RESISTOR01


//--------EOF---------

`ifndef SKY130_HILAS_NDIFFTHOXCONTACT
`define SKY130_HILAS_NDIFFTHOXCONTACT

/**
 * sky130_hilas_nDiffThOxContact: None
 *
 * Verilog wrapper for sky130_hilas_nDiffThOxContact.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nDiffThOxContact (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nDiffThOxContact (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NDIFFTHOXCONTACT


//--------EOF---------

`ifndef SKY130_HILAS_VINJNOR3
`define SKY130_HILAS_VINJNOR3

/**
 * sky130_hilas_VinjNOR3: 3-input NOR gate capable of VING voltage
 *
 * Verilog wrapper for sky130_hilas_VinjNOR3.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_VinjNOR3 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_VinjNOR3 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_VINJNOR3


//--------EOF---------

`ifndef SKY130_HILAS_NFETMIRRORPAIRS2
`define SKY130_HILAS_NFETMIRRORPAIRS2

/**
 * sky130_hilas_nFETmirrorPairs2: None
 *
 * Verilog wrapper for sky130_hilas_nFETmirrorPairs2.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETmirrorPairs2 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETmirrorPairs2 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NFETMIRRORPAIRS2


//--------EOF---------

`ifndef SKY130_HILAS_NFETMIRRORPAIRS
`define SKY130_HILAS_NFETMIRRORPAIRS

/**
 * sky130_hilas_nFETmirrorPairs: pairs of nFET current mirrors
 *
 * Verilog wrapper for sky130_hilas_nFETmirrorPairs.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETmirrorPairs (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETmirrorPairs (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NFETMIRRORPAIRS


//--------EOF---------

`ifndef SKY130_HILAS_VINJDIODEPROTECT01
`define SKY130_HILAS_VINJDIODEPROTECT01

/**
 * sky130_hilas_VinjDiodeProtect01: protective ESD diode for VINJ line
 *
 * Verilog wrapper for sky130_hilas_VinjDiodeProtect01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_VinjDiodeProtect01 (
    VINJ,
    INPUT,
    VGND,
    VNB,
    VPB
);
        inout VINJ;
        inout INPUT;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_VinjDiodeProtect01 (
    VINJ,
    INPUT
);
        inout VINJ;
        inout INPUT;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_VINJDIODEPROTECT01


//--------EOF---------

`ifndef SKY130_HILAS_LEVELSHIFT4INPUTUP
`define SKY130_HILAS_LEVELSHIFT4INPUTUP

/**
 * sky130_hilas_LevelShift4InputUp: 4-channel level shifter
 *
 * Verilog wrapper for sky130_hilas_LevelShift4InputUp.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_LevelShift4InputUp (
    VINJ,
    OUTPUT1,
    OUTPUT2,
    OUTPUT3,
    OUTPUT4,
    INPUT1,
    INPUT2,
    INPUT3,
    INPUT4,
    VPWR,
    VGND,
    VNB,
    VPB
);
        inout VINJ;
        inout OUTPUT1;
        inout OUTPUT2;
        inout OUTPUT3;
        inout OUTPUT4;
        inout INPUT1;
        inout INPUT2;
        inout INPUT3;
        inout INPUT4;
        inout VPWR;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_LevelShift4InputUp (
    VINJ,
    OUTPUT1,
    OUTPUT2,
    OUTPUT3,
    OUTPUT4,
    INPUT1,
    INPUT2,
    INPUT3,
    INPUT4
);
        inout VINJ;
        inout OUTPUT1;
        inout OUTPUT2;
        inout OUTPUT3;
        inout OUTPUT4;
        inout INPUT1;
        inout INPUT2;
        inout INPUT3;
        inout INPUT4;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_LEVELSHIFT4INPUTUP


//--------EOF---------

`ifndef SKY130_HILAS_WTA4STAGE01
`define SKY130_HILAS_WTA4STAGE01

/**
 * sky130_hilas_WTA4Stage01: 4-input winner-take-all circuit. Connects directly to array of swc4x2cell. Can array vertically. Needs one nFET transistor current source.
 *
 * Verilog wrapper for sky130_hilas_WTA4Stage01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_WTA4Stage01 (
    OUTPUT1,
    OUTPUT2,
    OUTPUT3,
    OUTPUT4,
    INPUT1,
    INPUT2,
    INPUT3,
    INPUT4,
    DRAIN1,
    GATE1,
    VTUN,
    WTAMIDDLENODE,
    COLSEL1,
    VINJ,
    DRAIN2,
    DRAIN3,
    VGND,
    VPWR,
    VNB,
    VPB
);
        inout OUTPUT1;
        inout OUTPUT2;
        inout OUTPUT3;
        inout OUTPUT4;
        inout INPUT1;
        inout INPUT2;
        inout INPUT3;
        inout INPUT4;
        inout DRAIN1;
        inout GATE1;
        inout VTUN;
        inout WTAMIDDLENODE;
        inout COLSEL1;
        inout VINJ;
        inout DRAIN2;
        inout DRAIN3;
        inout VGND;
        inout VPWR;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_WTA4Stage01 (
    OUTPUT1,
    OUTPUT2,
    OUTPUT3,
    OUTPUT4,
    INPUT1,
    INPUT2,
    INPUT3,
    INPUT4,
    DRAIN1,
    GATE1,
    VTUN,
    WTAMIDDLENODE,
    COLSEL1,
    VINJ,
    DRAIN2,
    DRAIN3
);
        inout OUTPUT1;
        inout OUTPUT2;
        inout OUTPUT3;
        inout OUTPUT4;
        inout INPUT1;
        inout INPUT2;
        inout INPUT3;
        inout INPUT4;
        inout DRAIN1;
        inout GATE1;
        inout VTUN;
        inout WTAMIDDLENODE;
        inout COLSEL1;
        inout VINJ;
        inout DRAIN2;
        inout DRAIN3;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_WTA4STAGE01


//--------EOF---------

`ifndef SKY130_HILAS_DAC6TRANSISTORSTACK01B
`define SKY130_HILAS_DAC6TRANSISTORSTACK01B

/**
 * sky130_hilas_DAC6TransistorStack01b: None
 *
 * Verilog wrapper for sky130_hilas_DAC6TransistorStack01b.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6TransistorStack01b (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6TransistorStack01b (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DAC6TRANSISTORSTACK01B


//--------EOF---------

`ifndef SKY130_HILAS_TRANS4SMALL
`define SKY130_HILAS_TRANS4SMALL

/**
 * sky130_hilas_Trans4small: 3 small nFETs + 3 small pFETs
 *
 * Verilog wrapper for sky130_hilas_Trans4small.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_Trans4small (
    NFET_SOURCE1,
    NFET_GATE1,
    NFET_SOURCE2,
    NFET_GATE2,
    NFET_SOURCE3,
    NFET_GATE3,
    PFET_SOURCE1,
    PFET_GATE1,
    PFET_SOURCE2,
    PFET_GATE2,
    PFET_SOURCE3,
    PFET_GATE3,
    WELL,
    PFET_DRAIN3,
    PFET_DRAIN1,
    NFET_DRAIN3,
    NFET_DRAIN2,
    NFET_DRAIN1,
    VGND,
    VNB,
    VPB
);
        inout NFET_SOURCE1;
        inout NFET_GATE1;
        inout NFET_SOURCE2;
        inout NFET_GATE2;
        inout NFET_SOURCE3;
        inout NFET_GATE3;
        inout PFET_SOURCE1;
        inout PFET_GATE1;
        inout PFET_SOURCE2;
        inout PFET_GATE2;
        inout PFET_SOURCE3;
        inout PFET_GATE3;
        inout WELL;
        inout PFET_DRAIN3;
        inout PFET_DRAIN1;
        inout NFET_DRAIN3;
        inout NFET_DRAIN2;
        inout NFET_DRAIN1;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_Trans4small (
    NFET_SOURCE1,
    NFET_GATE1,
    NFET_SOURCE2,
    NFET_GATE2,
    NFET_SOURCE3,
    NFET_GATE3,
    PFET_SOURCE1,
    PFET_GATE1,
    PFET_SOURCE2,
    PFET_GATE2,
    PFET_SOURCE3,
    PFET_GATE3,
    WELL,
    PFET_DRAIN3,
    PFET_DRAIN1,
    NFET_DRAIN3,
    NFET_DRAIN2,
    NFET_DRAIN1
);
        inout NFET_SOURCE1;
        inout NFET_GATE1;
        inout NFET_SOURCE2;
        inout NFET_GATE2;
        inout NFET_SOURCE3;
        inout NFET_GATE3;
        inout PFET_SOURCE1;
        inout PFET_GATE1;
        inout PFET_SOURCE2;
        inout PFET_GATE2;
        inout PFET_SOURCE3;
        inout PFET_GATE3;
        inout WELL;
        inout PFET_DRAIN3;
        inout PFET_DRAIN1;
        inout NFET_DRAIN3;
        inout NFET_DRAIN2;
        inout NFET_DRAIN1;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TRANS4SMALL


//--------EOF---------

`ifndef SKY130_HILAS_LEFTPROTECTION
`define SKY130_HILAS_LEFTPROTECTION

/**
 * sky130_hilas_LeftProtection: 
 *
 * Verilog wrapper for sky130_hilas_LeftProtection.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_LeftProtection (
    IO25,
    IO26,
    IO27,
    IO28,
    IO29,
    IO30,
    IO31,
    IO32,
    IO33,
    IO34,
    IO35,
    IO36,
    IO37,
    PIN1,
    PIN2,
    PIN4,
    PIN5,
    PIN6,
    PIN7,
    PIN8,
    PIN9,
    PIN10,
    PIN11,
    PIN12,
    PIN13,
    VNB,
    VPB
);
        inout IO25;
        inout IO26;
        inout IO27;
        inout IO28;
        inout IO29;
        inout IO30;
        inout IO31;
        inout IO32;
        inout IO33;
        inout IO34;
        inout IO35;
        inout IO36;
        inout IO37;
        inout PIN1;
        inout PIN2;
        inout PIN4;
        inout PIN5;
        inout PIN6;
        inout PIN7;
        inout PIN8;
        inout PIN9;
        inout PIN10;
        inout PIN11;
        inout PIN12;
        inout PIN13;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_LeftProtection (
    IO25,
    IO26,
    IO27,
    IO28,
    IO29,
    IO30,
    IO31,
    IO32,
    IO33,
    IO34,
    IO35,
    IO36,
    IO37,
    PIN1,
    PIN2,
    PIN4,
    PIN5,
    PIN6,
    PIN7,
    PIN8,
    PIN9,
    PIN10,
    PIN11,
    PIN12,
    PIN13
);
        inout IO25;
        inout IO26;
        inout IO27;
        inout IO28;
        inout IO29;
        inout IO30;
        inout IO31;
        inout IO32;
        inout IO33;
        inout IO34;
        inout IO35;
        inout IO36;
        inout IO37;
        inout PIN1;
        inout PIN2;
        inout PIN4;
        inout PIN5;
        inout PIN6;
        inout PIN7;
        inout PIN8;
        inout PIN9;
        inout PIN10;
        inout PIN11;
        inout PIN12;
        inout PIN13;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_LEFTPROTECTION


//--------EOF---------

`ifndef SKY130_HILAS_FGBIASWEAKGATE2X1CELL
`define SKY130_HILAS_FGBIASWEAKGATE2X1CELL

/**
 * sky130_hilas_FGBiasWeakGate2x1cell: 2x1 array of FG switch cells configured as pFET current sources with weak capacitive gate inputs
 *
 * Verilog wrapper for sky130_hilas_FGBiasWeakGate2x1cell.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGBiasWeakGate2x1cell (
    DRAIN1,
    VIN11,
    ROW1,
    ROW2,
    VINJ,
    COLSEL1,
    GATE1,
    VTUN,
    DRAIN2,
    VIN12,
    COMMONSOURCE,
    VGND,
    VNB,
    VPB
);
        inout DRAIN1;
        inout VIN11;
        inout ROW1;
        inout ROW2;
        inout VINJ;
        inout COLSEL1;
        inout GATE1;
        inout VTUN;
        inout DRAIN2;
        inout VIN12;
        inout COMMONSOURCE;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGBiasWeakGate2x1cell (
    DRAIN1,
    VIN11,
    ROW1,
    ROW2,
    VINJ,
    COLSEL1,
    GATE1,
    VTUN,
    DRAIN2,
    VIN12,
    COMMONSOURCE
);
        inout DRAIN1;
        inout VIN11;
        inout ROW1;
        inout ROW2;
        inout VINJ;
        inout COLSEL1;
        inout GATE1;
        inout VTUN;
        inout DRAIN2;
        inout VIN12;
        inout COMMONSOURCE;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_FGBIASWEAKGATE2X1CELL


//--------EOF---------

`ifndef USER_ANALOG_PROJECT_WRAPPER
`define USER_ANALOG_PROJECT_WRAPPER

/**
 * user_analog_project_wrapper: 
 *
 * Verilog wrapper for user_analog_project_wrapper.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module user_analog_project_wrapper (
    GPIO_ANALOG\[0\],
    GPIO_ANALOG\[10\],
    GPIO_ANALOG\[11\],
    GPIO_ANALOG\[12\],
    GPIO_ANALOG\[13\],
    GPIO_ANALOG\[14\],
    GPIO_ANALOG\[15\],
    GPIO_ANALOG\[16\],
    GPIO_ANALOG\[17\],
    GPIO_ANALOG\[1\],
    GPIO_ANALOG\[2\],
    GPIO_ANALOG\[3\],
    GPIO_ANALOG\[4\],
    GPIO_ANALOG\[7\],
    GPIO_ANALOG\[8\],
    GPIO_ANALOG\[9\],
    GPIO_NOESD\[0\],
    GPIO_NOESD\[10\],
    GPIO_NOESD\[11\],
    GPIO_NOESD\[12\],
    GPIO_NOESD\[13\],
    GPIO_NOESD\[14\],
    GPIO_NOESD\[15\],
    GPIO_NOESD\[16\],
    GPIO_NOESD\[17\],
    GPIO_NOESD\[1\],
    GPIO_NOESD\[2\],
    GPIO_NOESD\[3\],
    GPIO_NOESD\[4\],
    GPIO_NOESD\[5\],
    GPIO_NOESD\[6\],
    GPIO_NOESD\[7\],
    GPIO_NOESD\[8\],
    GPIO_NOESD\[9\],
    IO_ANALOG\[0\],
    IO_ANALOG\[10\],
    IO_ANALOG\[1\],
    IO_ANALOG\[2\],
    IO_ANALOG\[3\],
    IO_ANALOG\[4\],
    IO_ANALOG\[5\],
    IO_ANALOG\[6\],
    IO_ANALOG\[7\],
    IO_ANALOG\[8\],
    IO_ANALOG\[9\],
    IO_CLAMP_HIGH\[0\],
    IO_CLAMP_HIGH\[1\],
    IO_CLAMP_HIGH\[2\],
    IO_CLAMP_LOW\[0\],
    IO_CLAMP_LOW\[1\],
    IO_CLAMP_LOW\[2\],
    IO_IN\[0\],
    IO_IN\[10\],
    IO_IN\[11\],
    IO_IN\[12\],
    IO_IN\[13\],
    IO_IN\[14\],
    IO_IN\[15\],
    IO_IN\[16\],
    IO_IN\[17\],
    IO_IN\[18\],
    IO_IN\[19\],
    IO_IN\[1\],
    IO_IN\[20\],
    IO_IN\[21\],
    IO_IN\[22\],
    IO_IN\[23\],
    IO_IN\[24\],
    IO_IN\[25\],
    IO_IN\[26\],
    IO_IN\[2\],
    IO_IN\[3\],
    IO_IN\[4\],
    IO_IN\[5\],
    IO_IN\[6\],
    IO_IN\[7\],
    IO_IN\[8\],
    IO_IN\[9\],
    IO_IN_3V3\[0\],
    IO_IN_3V3\[10\],
    IO_IN_3V3\[11\],
    IO_IN_3V3\[12\],
    IO_IN_3V3\[13\],
    IO_IN_3V3\[14\],
    IO_IN_3V3\[15\],
    IO_IN_3V3\[16\],
    IO_IN_3V3\[17\],
    IO_IN_3V3\[18\],
    IO_IN_3V3\[19\],
    IO_IN_3V3\[1\],
    IO_IN_3V3\[20\],
    IO_IN_3V3\[21\],
    IO_IN_3V3\[22\],
    IO_IN_3V3\[23\],
    IO_IN_3V3\[24\],
    IO_IN_3V3\[25\],
    IO_IN_3V3\[26\],
    IO_IN_3V3\[2\],
    IO_IN_3V3\[3\],
    IO_IN_3V3\[4\],
    IO_IN_3V3\[5\],
    IO_IN_3V3\[6\],
    IO_IN_3V3\[7\],
    IO_IN_3V3\[8\],
    IO_IN_3V3\[9\],
    IO_OEB\[0\],
    IO_OEB\[10\],
    IO_OEB\[11\],
    IO_OEB\[12\],
    IO_OEB\[13\],
    IO_OEB\[14\],
    IO_OEB\[15\],
    IO_OEB\[16\],
    IO_OEB\[17\],
    IO_OEB\[18\],
    IO_OEB\[19\],
    IO_OEB\[1\],
    IO_OEB\[20\],
    IO_OEB\[21\],
    IO_OEB\[22\],
    IO_OEB\[23\],
    IO_OEB\[24\],
    IO_OEB\[25\],
    IO_OEB\[26\],
    IO_OEB\[2\],
    IO_OEB\[3\],
    IO_OEB\[4\],
    IO_OEB\[5\],
    IO_OEB\[6\],
    IO_OEB\[7\],
    IO_OEB\[8\],
    IO_OEB\[9\],
    IO_OUT\[0\],
    IO_OUT\[10\],
    IO_OUT\[11\],
    IO_OUT\[12\],
    IO_OUT\[13\],
    IO_OUT\[14\],
    IO_OUT\[15\],
    IO_OUT\[16\],
    IO_OUT\[17\],
    IO_OUT\[18\],
    IO_OUT\[19\],
    IO_OUT\[1\],
    IO_OUT\[20\],
    IO_OUT\[21\],
    IO_OUT\[22\],
    IO_OUT\[23\],
    IO_OUT\[24\],
    IO_OUT\[25\],
    IO_OUT\[26\],
    IO_OUT\[2\],
    IO_OUT\[3\],
    IO_OUT\[4\],
    IO_OUT\[5\],
    IO_OUT\[6\],
    IO_OUT\[7\],
    IO_OUT\[8\],
    IO_OUT\[9\],
    LA_DATA_IN\[0\],
    LA_DATA_IN\[100\],
    LA_DATA_IN\[101\],
    LA_DATA_IN\[102\],
    LA_DATA_IN\[103\],
    LA_DATA_IN\[104\],
    LA_DATA_IN\[105\],
    LA_DATA_IN\[106\],
    LA_DATA_IN\[107\],
    LA_DATA_IN\[108\],
    LA_DATA_IN\[109\],
    LA_DATA_IN\[10\],
    LA_DATA_IN\[110\],
    LA_DATA_IN\[111\],
    LA_DATA_IN\[112\],
    LA_DATA_IN\[113\],
    LA_DATA_IN\[114\],
    LA_DATA_IN\[115\],
    LA_DATA_IN\[116\],
    LA_DATA_IN\[117\],
    LA_DATA_IN\[118\],
    LA_DATA_IN\[119\],
    LA_DATA_IN\[11\],
    LA_DATA_IN\[120\],
    LA_DATA_IN\[121\],
    LA_DATA_IN\[122\],
    LA_DATA_IN\[123\],
    LA_DATA_IN\[124\],
    LA_DATA_IN\[125\],
    LA_DATA_IN\[126\],
    LA_DATA_IN\[127\],
    LA_DATA_IN\[12\],
    LA_DATA_IN\[13\],
    LA_DATA_IN\[14\],
    LA_DATA_IN\[15\],
    LA_DATA_IN\[16\],
    LA_DATA_IN\[17\],
    LA_DATA_IN\[18\],
    LA_DATA_IN\[19\],
    LA_DATA_IN\[1\],
    LA_DATA_IN\[20\],
    LA_DATA_IN\[21\],
    LA_DATA_IN\[22\],
    LA_DATA_IN\[23\],
    LA_DATA_IN\[24\],
    LA_DATA_IN\[25\],
    LA_DATA_IN\[26\],
    LA_DATA_IN\[27\],
    LA_DATA_IN\[28\],
    LA_DATA_IN\[29\],
    LA_DATA_IN\[2\],
    LA_DATA_IN\[30\],
    LA_DATA_IN\[31\],
    LA_DATA_IN\[32\],
    LA_DATA_IN\[33\],
    LA_DATA_IN\[34\],
    LA_DATA_IN\[35\],
    LA_DATA_IN\[36\],
    LA_DATA_IN\[37\],
    LA_DATA_IN\[38\],
    LA_DATA_IN\[39\],
    LA_DATA_IN\[3\],
    LA_DATA_IN\[40\],
    LA_DATA_IN\[41\],
    LA_DATA_IN\[42\],
    LA_DATA_IN\[43\],
    LA_DATA_IN\[44\],
    LA_DATA_IN\[45\],
    LA_DATA_IN\[46\],
    LA_DATA_IN\[47\],
    LA_DATA_IN\[48\],
    LA_DATA_IN\[49\],
    LA_DATA_IN\[4\],
    LA_DATA_IN\[50\],
    LA_DATA_IN\[51\],
    LA_DATA_IN\[52\],
    LA_DATA_IN\[53\],
    LA_DATA_IN\[54\],
    LA_DATA_IN\[55\],
    LA_DATA_IN\[56\],
    LA_DATA_IN\[57\],
    LA_DATA_IN\[58\],
    LA_DATA_IN\[59\],
    LA_DATA_IN\[5\],
    LA_DATA_IN\[60\],
    LA_DATA_IN\[61\],
    LA_DATA_IN\[62\],
    LA_DATA_IN\[63\],
    LA_DATA_IN\[64\],
    LA_DATA_IN\[65\],
    LA_DATA_IN\[66\],
    LA_DATA_IN\[67\],
    LA_DATA_IN\[68\],
    LA_DATA_IN\[69\],
    LA_DATA_IN\[6\],
    LA_DATA_IN\[70\],
    LA_DATA_IN\[71\],
    LA_DATA_IN\[72\],
    LA_DATA_IN\[73\],
    LA_DATA_IN\[74\],
    LA_DATA_IN\[75\],
    LA_DATA_IN\[76\],
    LA_DATA_IN\[77\],
    LA_DATA_IN\[78\],
    LA_DATA_IN\[79\],
    LA_DATA_IN\[7\],
    LA_DATA_IN\[80\],
    LA_DATA_IN\[81\],
    LA_DATA_IN\[82\],
    LA_DATA_IN\[83\],
    LA_DATA_IN\[84\],
    LA_DATA_IN\[85\],
    LA_DATA_IN\[86\],
    LA_DATA_IN\[87\],
    LA_DATA_IN\[88\],
    LA_DATA_IN\[89\],
    LA_DATA_IN\[8\],
    LA_DATA_IN\[90\],
    LA_DATA_IN\[91\],
    LA_DATA_IN\[92\],
    LA_DATA_IN\[93\],
    LA_DATA_IN\[94\],
    LA_DATA_IN\[95\],
    LA_DATA_IN\[96\],
    LA_DATA_IN\[97\],
    LA_DATA_IN\[98\],
    LA_DATA_IN\[99\],
    LA_DATA_IN\[9\],
    LA_DATA_OUT\[0\],
    LA_DATA_OUT\[100\],
    LA_DATA_OUT\[101\],
    LA_DATA_OUT\[102\],
    LA_DATA_OUT\[103\],
    LA_DATA_OUT\[104\],
    LA_DATA_OUT\[105\],
    LA_DATA_OUT\[106\],
    LA_DATA_OUT\[107\],
    LA_DATA_OUT\[108\],
    LA_DATA_OUT\[109\],
    LA_DATA_OUT\[10\],
    LA_DATA_OUT\[110\],
    LA_DATA_OUT\[111\],
    LA_DATA_OUT\[112\],
    LA_DATA_OUT\[113\],
    LA_DATA_OUT\[114\],
    LA_DATA_OUT\[115\],
    LA_DATA_OUT\[116\],
    LA_DATA_OUT\[117\],
    LA_DATA_OUT\[118\],
    LA_DATA_OUT\[119\],
    LA_DATA_OUT\[11\],
    LA_DATA_OUT\[120\],
    LA_DATA_OUT\[121\],
    LA_DATA_OUT\[122\],
    LA_DATA_OUT\[123\],
    LA_DATA_OUT\[124\],
    LA_DATA_OUT\[125\],
    LA_DATA_OUT\[126\],
    LA_DATA_OUT\[127\],
    LA_DATA_OUT\[12\],
    LA_DATA_OUT\[13\],
    LA_DATA_OUT\[14\],
    LA_DATA_OUT\[15\],
    LA_DATA_OUT\[16\],
    LA_DATA_OUT\[17\],
    LA_DATA_OUT\[18\],
    LA_DATA_OUT\[19\],
    LA_DATA_OUT\[1\],
    LA_DATA_OUT\[20\],
    LA_DATA_OUT\[21\],
    LA_DATA_OUT\[22\],
    LA_DATA_OUT\[23\],
    LA_DATA_OUT\[24\],
    LA_DATA_OUT\[25\],
    LA_DATA_OUT\[26\],
    LA_DATA_OUT\[27\],
    LA_DATA_OUT\[28\],
    LA_DATA_OUT\[29\],
    LA_DATA_OUT\[2\],
    LA_DATA_OUT\[30\],
    LA_DATA_OUT\[31\],
    LA_DATA_OUT\[32\],
    LA_DATA_OUT\[33\],
    LA_DATA_OUT\[34\],
    LA_DATA_OUT\[35\],
    LA_DATA_OUT\[36\],
    LA_DATA_OUT\[37\],
    LA_DATA_OUT\[38\],
    LA_DATA_OUT\[39\],
    LA_DATA_OUT\[3\],
    LA_DATA_OUT\[40\],
    LA_DATA_OUT\[41\],
    LA_DATA_OUT\[42\],
    LA_DATA_OUT\[43\],
    LA_DATA_OUT\[44\],
    LA_DATA_OUT\[45\],
    LA_DATA_OUT\[46\],
    LA_DATA_OUT\[47\],
    LA_DATA_OUT\[48\],
    LA_DATA_OUT\[49\],
    LA_DATA_OUT\[4\],
    LA_DATA_OUT\[50\],
    LA_DATA_OUT\[51\],
    LA_DATA_OUT\[52\],
    LA_DATA_OUT\[53\],
    LA_DATA_OUT\[54\],
    LA_DATA_OUT\[55\],
    LA_DATA_OUT\[56\],
    LA_DATA_OUT\[57\],
    LA_DATA_OUT\[58\],
    LA_DATA_OUT\[59\],
    LA_DATA_OUT\[5\],
    LA_DATA_OUT\[60\],
    LA_DATA_OUT\[61\],
    LA_DATA_OUT\[62\],
    LA_DATA_OUT\[63\],
    LA_DATA_OUT\[64\],
    LA_DATA_OUT\[65\],
    LA_DATA_OUT\[66\],
    LA_DATA_OUT\[67\],
    LA_DATA_OUT\[68\],
    LA_DATA_OUT\[69\],
    LA_DATA_OUT\[6\],
    LA_DATA_OUT\[70\],
    LA_DATA_OUT\[71\],
    LA_DATA_OUT\[72\],
    LA_DATA_OUT\[73\],
    LA_DATA_OUT\[74\],
    LA_DATA_OUT\[75\],
    LA_DATA_OUT\[76\],
    LA_DATA_OUT\[77\],
    LA_DATA_OUT\[78\],
    LA_DATA_OUT\[79\],
    LA_DATA_OUT\[7\],
    LA_DATA_OUT\[80\],
    LA_DATA_OUT\[81\],
    LA_DATA_OUT\[82\],
    LA_DATA_OUT\[83\],
    LA_DATA_OUT\[84\],
    LA_DATA_OUT\[85\],
    LA_DATA_OUT\[86\],
    LA_DATA_OUT\[87\],
    LA_DATA_OUT\[88\],
    LA_DATA_OUT\[89\],
    LA_DATA_OUT\[8\],
    LA_DATA_OUT\[90\],
    LA_DATA_OUT\[91\],
    LA_DATA_OUT\[92\],
    LA_DATA_OUT\[93\],
    LA_DATA_OUT\[94\],
    LA_DATA_OUT\[95\],
    LA_DATA_OUT\[96\],
    LA_DATA_OUT\[97\],
    LA_DATA_OUT\[98\],
    LA_DATA_OUT\[99\],
    LA_DATA_OUT\[9\],
    LA_OENB\[0\],
    LA_OENB\[100\],
    LA_OENB\[101\],
    LA_OENB\[102\],
    LA_OENB\[103\],
    LA_OENB\[104\],
    LA_OENB\[105\],
    LA_OENB\[106\],
    LA_OENB\[107\],
    LA_OENB\[108\],
    LA_OENB\[109\],
    LA_OENB\[10\],
    LA_OENB\[110\],
    LA_OENB\[111\],
    LA_OENB\[112\],
    LA_OENB\[113\],
    LA_OENB\[114\],
    LA_OENB\[115\],
    LA_OENB\[116\],
    LA_OENB\[117\],
    LA_OENB\[118\],
    LA_OENB\[119\],
    LA_OENB\[11\],
    LA_OENB\[120\],
    LA_OENB\[121\],
    LA_OENB\[122\],
    LA_OENB\[123\],
    LA_OENB\[124\],
    LA_OENB\[125\],
    LA_OENB\[126\],
    LA_OENB\[127\],
    LA_OENB\[12\],
    LA_OENB\[13\],
    LA_OENB\[14\],
    LA_OENB\[15\],
    LA_OENB\[16\],
    LA_OENB\[17\],
    LA_OENB\[18\],
    LA_OENB\[19\],
    LA_OENB\[1\],
    LA_OENB\[20\],
    LA_OENB\[21\],
    LA_OENB\[22\],
    LA_OENB\[23\],
    LA_OENB\[24\],
    LA_OENB\[25\],
    LA_OENB\[26\],
    LA_OENB\[27\],
    LA_OENB\[28\],
    LA_OENB\[29\],
    LA_OENB\[2\],
    LA_OENB\[30\],
    LA_OENB\[31\],
    LA_OENB\[32\],
    LA_OENB\[33\],
    LA_OENB\[34\],
    LA_OENB\[35\],
    LA_OENB\[36\],
    LA_OENB\[37\],
    LA_OENB\[38\],
    LA_OENB\[39\],
    LA_OENB\[3\],
    LA_OENB\[40\],
    LA_OENB\[41\],
    LA_OENB\[42\],
    LA_OENB\[43\],
    LA_OENB\[44\],
    LA_OENB\[45\],
    LA_OENB\[46\],
    LA_OENB\[47\],
    LA_OENB\[48\],
    LA_OENB\[49\],
    LA_OENB\[4\],
    LA_OENB\[50\],
    LA_OENB\[51\],
    LA_OENB\[52\],
    LA_OENB\[53\],
    LA_OENB\[54\],
    LA_OENB\[55\],
    LA_OENB\[56\],
    LA_OENB\[57\],
    LA_OENB\[58\],
    LA_OENB\[59\],
    LA_OENB\[5\],
    LA_OENB\[60\],
    LA_OENB\[61\],
    LA_OENB\[62\],
    LA_OENB\[63\],
    LA_OENB\[64\],
    LA_OENB\[65\],
    LA_OENB\[66\],
    LA_OENB\[67\],
    LA_OENB\[68\],
    LA_OENB\[69\],
    LA_OENB\[6\],
    LA_OENB\[70\],
    LA_OENB\[71\],
    LA_OENB\[72\],
    LA_OENB\[73\],
    LA_OENB\[74\],
    LA_OENB\[75\],
    LA_OENB\[76\],
    LA_OENB\[77\],
    LA_OENB\[78\],
    LA_OENB\[79\],
    LA_OENB\[7\],
    LA_OENB\[80\],
    LA_OENB\[81\],
    LA_OENB\[82\],
    LA_OENB\[83\],
    LA_OENB\[84\],
    LA_OENB\[85\],
    LA_OENB\[86\],
    LA_OENB\[87\],
    LA_OENB\[88\],
    LA_OENB\[89\],
    LA_OENB\[8\],
    LA_OENB\[90\],
    LA_OENB\[91\],
    LA_OENB\[92\],
    LA_OENB\[93\],
    LA_OENB\[94\],
    LA_OENB\[95\],
    LA_OENB\[96\],
    LA_OENB\[97\],
    LA_OENB\[98\],
    LA_OENB\[99\],
    LA_OENB\[9\],
    USER_CLOCK2,
    USER_IRQ\[0\],
    USER_IRQ\[1\],
    USER_IRQ\[2\],
    VCCD1,
    VCCD2,
    VDDA1,
    VDDA2,
    VSSA1,
    VSSA2,
    VSSD1,
    VSSD2,
    WBS_ACK_O,
    WBS_ADR_I\[0\],
    WBS_ADR_I\[10\],
    WBS_ADR_I\[11\],
    WBS_ADR_I\[12\],
    WBS_ADR_I\[13\],
    WBS_ADR_I\[14\],
    WBS_ADR_I\[15\],
    WBS_ADR_I\[16\],
    WBS_ADR_I\[17\],
    WBS_ADR_I\[18\],
    WBS_ADR_I\[19\],
    WBS_ADR_I\[1\],
    WBS_ADR_I\[20\],
    WBS_ADR_I\[21\],
    WBS_ADR_I\[22\],
    WBS_ADR_I\[23\],
    WBS_ADR_I\[24\],
    WBS_ADR_I\[25\],
    WBS_ADR_I\[26\],
    WBS_ADR_I\[27\],
    WBS_ADR_I\[28\],
    WBS_ADR_I\[29\],
    WBS_ADR_I\[2\],
    WBS_ADR_I\[30\],
    WBS_ADR_I\[31\],
    WBS_ADR_I\[3\],
    WBS_ADR_I\[4\],
    WBS_ADR_I\[5\],
    WBS_ADR_I\[6\],
    WBS_ADR_I\[7\],
    WBS_ADR_I\[8\],
    WBS_ADR_I\[9\],
    WBS_CYC_I,
    WBS_DAT_I\[0\],
    WBS_DAT_I\[10\],
    WBS_DAT_I\[11\],
    WBS_DAT_I\[12\],
    WBS_DAT_I\[13\],
    WBS_DAT_I\[14\],
    WBS_DAT_I\[15\],
    WBS_DAT_I\[16\],
    WBS_DAT_I\[17\],
    WBS_DAT_I\[18\],
    WBS_DAT_I\[19\],
    WBS_DAT_I\[1\],
    WBS_DAT_I\[20\],
    WBS_DAT_I\[21\],
    WBS_DAT_I\[22\],
    WBS_DAT_I\[23\],
    WBS_DAT_I\[24\],
    WBS_DAT_I\[25\],
    WBS_DAT_I\[26\],
    WBS_DAT_I\[27\],
    WBS_DAT_I\[28\],
    WBS_DAT_I\[29\],
    WBS_DAT_I\[2\],
    WBS_DAT_I\[30\],
    WBS_DAT_I\[31\],
    WBS_DAT_I\[3\],
    WBS_DAT_I\[4\],
    WBS_DAT_I\[5\],
    WBS_DAT_I\[6\],
    WBS_DAT_I\[7\],
    WBS_DAT_I\[8\],
    WBS_DAT_I\[9\],
    WBS_DAT_O\[0\],
    WBS_DAT_O\[10\],
    WBS_DAT_O\[11\],
    WBS_DAT_O\[12\],
    WBS_DAT_O\[13\],
    WBS_DAT_O\[14\],
    WBS_DAT_O\[15\],
    WBS_DAT_O\[16\],
    WBS_DAT_O\[17\],
    WBS_DAT_O\[18\],
    WBS_DAT_O\[19\],
    WBS_DAT_O\[1\],
    WBS_DAT_O\[20\],
    WBS_DAT_O\[21\],
    WBS_DAT_O\[22\],
    WBS_DAT_O\[23\],
    WBS_DAT_O\[24\],
    WBS_DAT_O\[25\],
    WBS_DAT_O\[26\],
    WBS_DAT_O\[27\],
    WBS_DAT_O\[28\],
    WBS_DAT_O\[29\],
    WBS_DAT_O\[2\],
    WBS_DAT_O\[30\],
    WBS_DAT_O\[31\],
    WBS_DAT_O\[3\],
    WBS_DAT_O\[4\],
    WBS_DAT_O\[5\],
    WBS_DAT_O\[6\],
    WBS_DAT_O\[7\],
    WBS_DAT_O\[8\],
    WBS_DAT_O\[9\],
    WBS_SEL_I\[0\],
    WBS_SEL_I\[1\],
    WBS_SEL_I\[2\],
    WBS_SEL_I\[3\],
    WBS_STB_I,
    WBS_WE_I,
    WB_CLK_I,
    WB_RST_I,
    VNB,
    VPB
);
        inout GPIO_ANALOG\[0\];
        inout GPIO_ANALOG\[10\];
        inout GPIO_ANALOG\[11\];
        inout GPIO_ANALOG\[12\];
        inout GPIO_ANALOG\[13\];
        inout GPIO_ANALOG\[14\];
        inout GPIO_ANALOG\[15\];
        inout GPIO_ANALOG\[16\];
        inout GPIO_ANALOG\[17\];
        inout GPIO_ANALOG\[1\];
        inout GPIO_ANALOG\[2\];
        inout GPIO_ANALOG\[3\];
        inout GPIO_ANALOG\[4\];
        inout GPIO_ANALOG\[7\];
        inout GPIO_ANALOG\[8\];
        inout GPIO_ANALOG\[9\];
        inout GPIO_NOESD\[0\];
        inout GPIO_NOESD\[10\];
        inout GPIO_NOESD\[11\];
        inout GPIO_NOESD\[12\];
        inout GPIO_NOESD\[13\];
        inout GPIO_NOESD\[14\];
        inout GPIO_NOESD\[15\];
        inout GPIO_NOESD\[16\];
        inout GPIO_NOESD\[17\];
        inout GPIO_NOESD\[1\];
        inout GPIO_NOESD\[2\];
        inout GPIO_NOESD\[3\];
        inout GPIO_NOESD\[4\];
        inout GPIO_NOESD\[5\];
        inout GPIO_NOESD\[6\];
        inout GPIO_NOESD\[7\];
        inout GPIO_NOESD\[8\];
        inout GPIO_NOESD\[9\];
        inout IO_ANALOG\[0\];
        inout IO_ANALOG\[10\];
        inout IO_ANALOG\[1\];
        inout IO_ANALOG\[2\];
        inout IO_ANALOG\[3\];
        inout IO_ANALOG\[4\];
        inout IO_ANALOG\[5\];
        inout IO_ANALOG\[6\];
        inout IO_ANALOG\[7\];
        inout IO_ANALOG\[8\];
        inout IO_ANALOG\[9\];
        inout IO_CLAMP_HIGH\[0\];
        inout IO_CLAMP_HIGH\[1\];
        inout IO_CLAMP_HIGH\[2\];
        inout IO_CLAMP_LOW\[0\];
        inout IO_CLAMP_LOW\[1\];
        inout IO_CLAMP_LOW\[2\];
        inout IO_IN\[0\];
        inout IO_IN\[10\];
        inout IO_IN\[11\];
        inout IO_IN\[12\];
        inout IO_IN\[13\];
        inout IO_IN\[14\];
        inout IO_IN\[15\];
        inout IO_IN\[16\];
        inout IO_IN\[17\];
        inout IO_IN\[18\];
        inout IO_IN\[19\];
        inout IO_IN\[1\];
        inout IO_IN\[20\];
        inout IO_IN\[21\];
        inout IO_IN\[22\];
        inout IO_IN\[23\];
        inout IO_IN\[24\];
        inout IO_IN\[25\];
        inout IO_IN\[26\];
        inout IO_IN\[2\];
        inout IO_IN\[3\];
        inout IO_IN\[4\];
        inout IO_IN\[5\];
        inout IO_IN\[6\];
        inout IO_IN\[7\];
        inout IO_IN\[8\];
        inout IO_IN\[9\];
        inout IO_IN_3V3\[0\];
        inout IO_IN_3V3\[10\];
        inout IO_IN_3V3\[11\];
        inout IO_IN_3V3\[12\];
        inout IO_IN_3V3\[13\];
        inout IO_IN_3V3\[14\];
        inout IO_IN_3V3\[15\];
        inout IO_IN_3V3\[16\];
        inout IO_IN_3V3\[17\];
        inout IO_IN_3V3\[18\];
        inout IO_IN_3V3\[19\];
        inout IO_IN_3V3\[1\];
        inout IO_IN_3V3\[20\];
        inout IO_IN_3V3\[21\];
        inout IO_IN_3V3\[22\];
        inout IO_IN_3V3\[23\];
        inout IO_IN_3V3\[24\];
        inout IO_IN_3V3\[25\];
        inout IO_IN_3V3\[26\];
        inout IO_IN_3V3\[2\];
        inout IO_IN_3V3\[3\];
        inout IO_IN_3V3\[4\];
        inout IO_IN_3V3\[5\];
        inout IO_IN_3V3\[6\];
        inout IO_IN_3V3\[7\];
        inout IO_IN_3V3\[8\];
        inout IO_IN_3V3\[9\];
        inout IO_OEB\[0\];
        inout IO_OEB\[10\];
        inout IO_OEB\[11\];
        inout IO_OEB\[12\];
        inout IO_OEB\[13\];
        inout IO_OEB\[14\];
        inout IO_OEB\[15\];
        inout IO_OEB\[16\];
        inout IO_OEB\[17\];
        inout IO_OEB\[18\];
        inout IO_OEB\[19\];
        inout IO_OEB\[1\];
        inout IO_OEB\[20\];
        inout IO_OEB\[21\];
        inout IO_OEB\[22\];
        inout IO_OEB\[23\];
        inout IO_OEB\[24\];
        inout IO_OEB\[25\];
        inout IO_OEB\[26\];
        inout IO_OEB\[2\];
        inout IO_OEB\[3\];
        inout IO_OEB\[4\];
        inout IO_OEB\[5\];
        inout IO_OEB\[6\];
        inout IO_OEB\[7\];
        inout IO_OEB\[8\];
        inout IO_OEB\[9\];
        inout IO_OUT\[0\];
        inout IO_OUT\[10\];
        inout IO_OUT\[11\];
        inout IO_OUT\[12\];
        inout IO_OUT\[13\];
        inout IO_OUT\[14\];
        inout IO_OUT\[15\];
        inout IO_OUT\[16\];
        inout IO_OUT\[17\];
        inout IO_OUT\[18\];
        inout IO_OUT\[19\];
        inout IO_OUT\[1\];
        inout IO_OUT\[20\];
        inout IO_OUT\[21\];
        inout IO_OUT\[22\];
        inout IO_OUT\[23\];
        inout IO_OUT\[24\];
        inout IO_OUT\[25\];
        inout IO_OUT\[26\];
        inout IO_OUT\[2\];
        inout IO_OUT\[3\];
        inout IO_OUT\[4\];
        inout IO_OUT\[5\];
        inout IO_OUT\[6\];
        inout IO_OUT\[7\];
        inout IO_OUT\[8\];
        inout IO_OUT\[9\];
        inout LA_DATA_IN\[0\];
        inout LA_DATA_IN\[100\];
        inout LA_DATA_IN\[101\];
        inout LA_DATA_IN\[102\];
        inout LA_DATA_IN\[103\];
        inout LA_DATA_IN\[104\];
        inout LA_DATA_IN\[105\];
        inout LA_DATA_IN\[106\];
        inout LA_DATA_IN\[107\];
        inout LA_DATA_IN\[108\];
        inout LA_DATA_IN\[109\];
        inout LA_DATA_IN\[10\];
        inout LA_DATA_IN\[110\];
        inout LA_DATA_IN\[111\];
        inout LA_DATA_IN\[112\];
        inout LA_DATA_IN\[113\];
        inout LA_DATA_IN\[114\];
        inout LA_DATA_IN\[115\];
        inout LA_DATA_IN\[116\];
        inout LA_DATA_IN\[117\];
        inout LA_DATA_IN\[118\];
        inout LA_DATA_IN\[119\];
        inout LA_DATA_IN\[11\];
        inout LA_DATA_IN\[120\];
        inout LA_DATA_IN\[121\];
        inout LA_DATA_IN\[122\];
        inout LA_DATA_IN\[123\];
        inout LA_DATA_IN\[124\];
        inout LA_DATA_IN\[125\];
        inout LA_DATA_IN\[126\];
        inout LA_DATA_IN\[127\];
        inout LA_DATA_IN\[12\];
        inout LA_DATA_IN\[13\];
        inout LA_DATA_IN\[14\];
        inout LA_DATA_IN\[15\];
        inout LA_DATA_IN\[16\];
        inout LA_DATA_IN\[17\];
        inout LA_DATA_IN\[18\];
        inout LA_DATA_IN\[19\];
        inout LA_DATA_IN\[1\];
        inout LA_DATA_IN\[20\];
        inout LA_DATA_IN\[21\];
        inout LA_DATA_IN\[22\];
        inout LA_DATA_IN\[23\];
        inout LA_DATA_IN\[24\];
        inout LA_DATA_IN\[25\];
        inout LA_DATA_IN\[26\];
        inout LA_DATA_IN\[27\];
        inout LA_DATA_IN\[28\];
        inout LA_DATA_IN\[29\];
        inout LA_DATA_IN\[2\];
        inout LA_DATA_IN\[30\];
        inout LA_DATA_IN\[31\];
        inout LA_DATA_IN\[32\];
        inout LA_DATA_IN\[33\];
        inout LA_DATA_IN\[34\];
        inout LA_DATA_IN\[35\];
        inout LA_DATA_IN\[36\];
        inout LA_DATA_IN\[37\];
        inout LA_DATA_IN\[38\];
        inout LA_DATA_IN\[39\];
        inout LA_DATA_IN\[3\];
        inout LA_DATA_IN\[40\];
        inout LA_DATA_IN\[41\];
        inout LA_DATA_IN\[42\];
        inout LA_DATA_IN\[43\];
        inout LA_DATA_IN\[44\];
        inout LA_DATA_IN\[45\];
        inout LA_DATA_IN\[46\];
        inout LA_DATA_IN\[47\];
        inout LA_DATA_IN\[48\];
        inout LA_DATA_IN\[49\];
        inout LA_DATA_IN\[4\];
        inout LA_DATA_IN\[50\];
        inout LA_DATA_IN\[51\];
        inout LA_DATA_IN\[52\];
        inout LA_DATA_IN\[53\];
        inout LA_DATA_IN\[54\];
        inout LA_DATA_IN\[55\];
        inout LA_DATA_IN\[56\];
        inout LA_DATA_IN\[57\];
        inout LA_DATA_IN\[58\];
        inout LA_DATA_IN\[59\];
        inout LA_DATA_IN\[5\];
        inout LA_DATA_IN\[60\];
        inout LA_DATA_IN\[61\];
        inout LA_DATA_IN\[62\];
        inout LA_DATA_IN\[63\];
        inout LA_DATA_IN\[64\];
        inout LA_DATA_IN\[65\];
        inout LA_DATA_IN\[66\];
        inout LA_DATA_IN\[67\];
        inout LA_DATA_IN\[68\];
        inout LA_DATA_IN\[69\];
        inout LA_DATA_IN\[6\];
        inout LA_DATA_IN\[70\];
        inout LA_DATA_IN\[71\];
        inout LA_DATA_IN\[72\];
        inout LA_DATA_IN\[73\];
        inout LA_DATA_IN\[74\];
        inout LA_DATA_IN\[75\];
        inout LA_DATA_IN\[76\];
        inout LA_DATA_IN\[77\];
        inout LA_DATA_IN\[78\];
        inout LA_DATA_IN\[79\];
        inout LA_DATA_IN\[7\];
        inout LA_DATA_IN\[80\];
        inout LA_DATA_IN\[81\];
        inout LA_DATA_IN\[82\];
        inout LA_DATA_IN\[83\];
        inout LA_DATA_IN\[84\];
        inout LA_DATA_IN\[85\];
        inout LA_DATA_IN\[86\];
        inout LA_DATA_IN\[87\];
        inout LA_DATA_IN\[88\];
        inout LA_DATA_IN\[89\];
        inout LA_DATA_IN\[8\];
        inout LA_DATA_IN\[90\];
        inout LA_DATA_IN\[91\];
        inout LA_DATA_IN\[92\];
        inout LA_DATA_IN\[93\];
        inout LA_DATA_IN\[94\];
        inout LA_DATA_IN\[95\];
        inout LA_DATA_IN\[96\];
        inout LA_DATA_IN\[97\];
        inout LA_DATA_IN\[98\];
        inout LA_DATA_IN\[99\];
        inout LA_DATA_IN\[9\];
        inout LA_DATA_OUT\[0\];
        inout LA_DATA_OUT\[100\];
        inout LA_DATA_OUT\[101\];
        inout LA_DATA_OUT\[102\];
        inout LA_DATA_OUT\[103\];
        inout LA_DATA_OUT\[104\];
        inout LA_DATA_OUT\[105\];
        inout LA_DATA_OUT\[106\];
        inout LA_DATA_OUT\[107\];
        inout LA_DATA_OUT\[108\];
        inout LA_DATA_OUT\[109\];
        inout LA_DATA_OUT\[10\];
        inout LA_DATA_OUT\[110\];
        inout LA_DATA_OUT\[111\];
        inout LA_DATA_OUT\[112\];
        inout LA_DATA_OUT\[113\];
        inout LA_DATA_OUT\[114\];
        inout LA_DATA_OUT\[115\];
        inout LA_DATA_OUT\[116\];
        inout LA_DATA_OUT\[117\];
        inout LA_DATA_OUT\[118\];
        inout LA_DATA_OUT\[119\];
        inout LA_DATA_OUT\[11\];
        inout LA_DATA_OUT\[120\];
        inout LA_DATA_OUT\[121\];
        inout LA_DATA_OUT\[122\];
        inout LA_DATA_OUT\[123\];
        inout LA_DATA_OUT\[124\];
        inout LA_DATA_OUT\[125\];
        inout LA_DATA_OUT\[126\];
        inout LA_DATA_OUT\[127\];
        inout LA_DATA_OUT\[12\];
        inout LA_DATA_OUT\[13\];
        inout LA_DATA_OUT\[14\];
        inout LA_DATA_OUT\[15\];
        inout LA_DATA_OUT\[16\];
        inout LA_DATA_OUT\[17\];
        inout LA_DATA_OUT\[18\];
        inout LA_DATA_OUT\[19\];
        inout LA_DATA_OUT\[1\];
        inout LA_DATA_OUT\[20\];
        inout LA_DATA_OUT\[21\];
        inout LA_DATA_OUT\[22\];
        inout LA_DATA_OUT\[23\];
        inout LA_DATA_OUT\[24\];
        inout LA_DATA_OUT\[25\];
        inout LA_DATA_OUT\[26\];
        inout LA_DATA_OUT\[27\];
        inout LA_DATA_OUT\[28\];
        inout LA_DATA_OUT\[29\];
        inout LA_DATA_OUT\[2\];
        inout LA_DATA_OUT\[30\];
        inout LA_DATA_OUT\[31\];
        inout LA_DATA_OUT\[32\];
        inout LA_DATA_OUT\[33\];
        inout LA_DATA_OUT\[34\];
        inout LA_DATA_OUT\[35\];
        inout LA_DATA_OUT\[36\];
        inout LA_DATA_OUT\[37\];
        inout LA_DATA_OUT\[38\];
        inout LA_DATA_OUT\[39\];
        inout LA_DATA_OUT\[3\];
        inout LA_DATA_OUT\[40\];
        inout LA_DATA_OUT\[41\];
        inout LA_DATA_OUT\[42\];
        inout LA_DATA_OUT\[43\];
        inout LA_DATA_OUT\[44\];
        inout LA_DATA_OUT\[45\];
        inout LA_DATA_OUT\[46\];
        inout LA_DATA_OUT\[47\];
        inout LA_DATA_OUT\[48\];
        inout LA_DATA_OUT\[49\];
        inout LA_DATA_OUT\[4\];
        inout LA_DATA_OUT\[50\];
        inout LA_DATA_OUT\[51\];
        inout LA_DATA_OUT\[52\];
        inout LA_DATA_OUT\[53\];
        inout LA_DATA_OUT\[54\];
        inout LA_DATA_OUT\[55\];
        inout LA_DATA_OUT\[56\];
        inout LA_DATA_OUT\[57\];
        inout LA_DATA_OUT\[58\];
        inout LA_DATA_OUT\[59\];
        inout LA_DATA_OUT\[5\];
        inout LA_DATA_OUT\[60\];
        inout LA_DATA_OUT\[61\];
        inout LA_DATA_OUT\[62\];
        inout LA_DATA_OUT\[63\];
        inout LA_DATA_OUT\[64\];
        inout LA_DATA_OUT\[65\];
        inout LA_DATA_OUT\[66\];
        inout LA_DATA_OUT\[67\];
        inout LA_DATA_OUT\[68\];
        inout LA_DATA_OUT\[69\];
        inout LA_DATA_OUT\[6\];
        inout LA_DATA_OUT\[70\];
        inout LA_DATA_OUT\[71\];
        inout LA_DATA_OUT\[72\];
        inout LA_DATA_OUT\[73\];
        inout LA_DATA_OUT\[74\];
        inout LA_DATA_OUT\[75\];
        inout LA_DATA_OUT\[76\];
        inout LA_DATA_OUT\[77\];
        inout LA_DATA_OUT\[78\];
        inout LA_DATA_OUT\[79\];
        inout LA_DATA_OUT\[7\];
        inout LA_DATA_OUT\[80\];
        inout LA_DATA_OUT\[81\];
        inout LA_DATA_OUT\[82\];
        inout LA_DATA_OUT\[83\];
        inout LA_DATA_OUT\[84\];
        inout LA_DATA_OUT\[85\];
        inout LA_DATA_OUT\[86\];
        inout LA_DATA_OUT\[87\];
        inout LA_DATA_OUT\[88\];
        inout LA_DATA_OUT\[89\];
        inout LA_DATA_OUT\[8\];
        inout LA_DATA_OUT\[90\];
        inout LA_DATA_OUT\[91\];
        inout LA_DATA_OUT\[92\];
        inout LA_DATA_OUT\[93\];
        inout LA_DATA_OUT\[94\];
        inout LA_DATA_OUT\[95\];
        inout LA_DATA_OUT\[96\];
        inout LA_DATA_OUT\[97\];
        inout LA_DATA_OUT\[98\];
        inout LA_DATA_OUT\[99\];
        inout LA_DATA_OUT\[9\];
        inout LA_OENB\[0\];
        inout LA_OENB\[100\];
        inout LA_OENB\[101\];
        inout LA_OENB\[102\];
        inout LA_OENB\[103\];
        inout LA_OENB\[104\];
        inout LA_OENB\[105\];
        inout LA_OENB\[106\];
        inout LA_OENB\[107\];
        inout LA_OENB\[108\];
        inout LA_OENB\[109\];
        inout LA_OENB\[10\];
        inout LA_OENB\[110\];
        inout LA_OENB\[111\];
        inout LA_OENB\[112\];
        inout LA_OENB\[113\];
        inout LA_OENB\[114\];
        inout LA_OENB\[115\];
        inout LA_OENB\[116\];
        inout LA_OENB\[117\];
        inout LA_OENB\[118\];
        inout LA_OENB\[119\];
        inout LA_OENB\[11\];
        inout LA_OENB\[120\];
        inout LA_OENB\[121\];
        inout LA_OENB\[122\];
        inout LA_OENB\[123\];
        inout LA_OENB\[124\];
        inout LA_OENB\[125\];
        inout LA_OENB\[126\];
        inout LA_OENB\[127\];
        inout LA_OENB\[12\];
        inout LA_OENB\[13\];
        inout LA_OENB\[14\];
        inout LA_OENB\[15\];
        inout LA_OENB\[16\];
        inout LA_OENB\[17\];
        inout LA_OENB\[18\];
        inout LA_OENB\[19\];
        inout LA_OENB\[1\];
        inout LA_OENB\[20\];
        inout LA_OENB\[21\];
        inout LA_OENB\[22\];
        inout LA_OENB\[23\];
        inout LA_OENB\[24\];
        inout LA_OENB\[25\];
        inout LA_OENB\[26\];
        inout LA_OENB\[27\];
        inout LA_OENB\[28\];
        inout LA_OENB\[29\];
        inout LA_OENB\[2\];
        inout LA_OENB\[30\];
        inout LA_OENB\[31\];
        inout LA_OENB\[32\];
        inout LA_OENB\[33\];
        inout LA_OENB\[34\];
        inout LA_OENB\[35\];
        inout LA_OENB\[36\];
        inout LA_OENB\[37\];
        inout LA_OENB\[38\];
        inout LA_OENB\[39\];
        inout LA_OENB\[3\];
        inout LA_OENB\[40\];
        inout LA_OENB\[41\];
        inout LA_OENB\[42\];
        inout LA_OENB\[43\];
        inout LA_OENB\[44\];
        inout LA_OENB\[45\];
        inout LA_OENB\[46\];
        inout LA_OENB\[47\];
        inout LA_OENB\[48\];
        inout LA_OENB\[49\];
        inout LA_OENB\[4\];
        inout LA_OENB\[50\];
        inout LA_OENB\[51\];
        inout LA_OENB\[52\];
        inout LA_OENB\[53\];
        inout LA_OENB\[54\];
        inout LA_OENB\[55\];
        inout LA_OENB\[56\];
        inout LA_OENB\[57\];
        inout LA_OENB\[58\];
        inout LA_OENB\[59\];
        inout LA_OENB\[5\];
        inout LA_OENB\[60\];
        inout LA_OENB\[61\];
        inout LA_OENB\[62\];
        inout LA_OENB\[63\];
        inout LA_OENB\[64\];
        inout LA_OENB\[65\];
        inout LA_OENB\[66\];
        inout LA_OENB\[67\];
        inout LA_OENB\[68\];
        inout LA_OENB\[69\];
        inout LA_OENB\[6\];
        inout LA_OENB\[70\];
        inout LA_OENB\[71\];
        inout LA_OENB\[72\];
        inout LA_OENB\[73\];
        inout LA_OENB\[74\];
        inout LA_OENB\[75\];
        inout LA_OENB\[76\];
        inout LA_OENB\[77\];
        inout LA_OENB\[78\];
        inout LA_OENB\[79\];
        inout LA_OENB\[7\];
        inout LA_OENB\[80\];
        inout LA_OENB\[81\];
        inout LA_OENB\[82\];
        inout LA_OENB\[83\];
        inout LA_OENB\[84\];
        inout LA_OENB\[85\];
        inout LA_OENB\[86\];
        inout LA_OENB\[87\];
        inout LA_OENB\[88\];
        inout LA_OENB\[89\];
        inout LA_OENB\[8\];
        inout LA_OENB\[90\];
        inout LA_OENB\[91\];
        inout LA_OENB\[92\];
        inout LA_OENB\[93\];
        inout LA_OENB\[94\];
        inout LA_OENB\[95\];
        inout LA_OENB\[96\];
        inout LA_OENB\[97\];
        inout LA_OENB\[98\];
        inout LA_OENB\[99\];
        inout LA_OENB\[9\];
        inout USER_CLOCK2;
        inout USER_IRQ\[0\];
        inout USER_IRQ\[1\];
        inout USER_IRQ\[2\];
        inout VCCD1;
        inout VCCD2;
        inout VDDA1;
        inout VDDA2;
        inout VSSA1;
        inout VSSA2;
        inout VSSD1;
        inout VSSD2;
        inout WBS_ACK_O;
        inout WBS_ADR_I\[0\];
        inout WBS_ADR_I\[10\];
        inout WBS_ADR_I\[11\];
        inout WBS_ADR_I\[12\];
        inout WBS_ADR_I\[13\];
        inout WBS_ADR_I\[14\];
        inout WBS_ADR_I\[15\];
        inout WBS_ADR_I\[16\];
        inout WBS_ADR_I\[17\];
        inout WBS_ADR_I\[18\];
        inout WBS_ADR_I\[19\];
        inout WBS_ADR_I\[1\];
        inout WBS_ADR_I\[20\];
        inout WBS_ADR_I\[21\];
        inout WBS_ADR_I\[22\];
        inout WBS_ADR_I\[23\];
        inout WBS_ADR_I\[24\];
        inout WBS_ADR_I\[25\];
        inout WBS_ADR_I\[26\];
        inout WBS_ADR_I\[27\];
        inout WBS_ADR_I\[28\];
        inout WBS_ADR_I\[29\];
        inout WBS_ADR_I\[2\];
        inout WBS_ADR_I\[30\];
        inout WBS_ADR_I\[31\];
        inout WBS_ADR_I\[3\];
        inout WBS_ADR_I\[4\];
        inout WBS_ADR_I\[5\];
        inout WBS_ADR_I\[6\];
        inout WBS_ADR_I\[7\];
        inout WBS_ADR_I\[8\];
        inout WBS_ADR_I\[9\];
        inout WBS_CYC_I;
        inout WBS_DAT_I\[0\];
        inout WBS_DAT_I\[10\];
        inout WBS_DAT_I\[11\];
        inout WBS_DAT_I\[12\];
        inout WBS_DAT_I\[13\];
        inout WBS_DAT_I\[14\];
        inout WBS_DAT_I\[15\];
        inout WBS_DAT_I\[16\];
        inout WBS_DAT_I\[17\];
        inout WBS_DAT_I\[18\];
        inout WBS_DAT_I\[19\];
        inout WBS_DAT_I\[1\];
        inout WBS_DAT_I\[20\];
        inout WBS_DAT_I\[21\];
        inout WBS_DAT_I\[22\];
        inout WBS_DAT_I\[23\];
        inout WBS_DAT_I\[24\];
        inout WBS_DAT_I\[25\];
        inout WBS_DAT_I\[26\];
        inout WBS_DAT_I\[27\];
        inout WBS_DAT_I\[28\];
        inout WBS_DAT_I\[29\];
        inout WBS_DAT_I\[2\];
        inout WBS_DAT_I\[30\];
        inout WBS_DAT_I\[31\];
        inout WBS_DAT_I\[3\];
        inout WBS_DAT_I\[4\];
        inout WBS_DAT_I\[5\];
        inout WBS_DAT_I\[6\];
        inout WBS_DAT_I\[7\];
        inout WBS_DAT_I\[8\];
        inout WBS_DAT_I\[9\];
        inout WBS_DAT_O\[0\];
        inout WBS_DAT_O\[10\];
        inout WBS_DAT_O\[11\];
        inout WBS_DAT_O\[12\];
        inout WBS_DAT_O\[13\];
        inout WBS_DAT_O\[14\];
        inout WBS_DAT_O\[15\];
        inout WBS_DAT_O\[16\];
        inout WBS_DAT_O\[17\];
        inout WBS_DAT_O\[18\];
        inout WBS_DAT_O\[19\];
        inout WBS_DAT_O\[1\];
        inout WBS_DAT_O\[20\];
        inout WBS_DAT_O\[21\];
        inout WBS_DAT_O\[22\];
        inout WBS_DAT_O\[23\];
        inout WBS_DAT_O\[24\];
        inout WBS_DAT_O\[25\];
        inout WBS_DAT_O\[26\];
        inout WBS_DAT_O\[27\];
        inout WBS_DAT_O\[28\];
        inout WBS_DAT_O\[29\];
        inout WBS_DAT_O\[2\];
        inout WBS_DAT_O\[30\];
        inout WBS_DAT_O\[31\];
        inout WBS_DAT_O\[3\];
        inout WBS_DAT_O\[4\];
        inout WBS_DAT_O\[5\];
        inout WBS_DAT_O\[6\];
        inout WBS_DAT_O\[7\];
        inout WBS_DAT_O\[8\];
        inout WBS_DAT_O\[9\];
        inout WBS_SEL_I\[0\];
        inout WBS_SEL_I\[1\];
        inout WBS_SEL_I\[2\];
        inout WBS_SEL_I\[3\];
        inout WBS_STB_I;
        inout WBS_WE_I;
        inout WB_CLK_I;
        inout WB_RST_I;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module user_analog_project_wrapper (
    GPIO_ANALOG\[0\],
    GPIO_ANALOG\[10\],
    GPIO_ANALOG\[11\],
    GPIO_ANALOG\[12\],
    GPIO_ANALOG\[13\],
    GPIO_ANALOG\[14\],
    GPIO_ANALOG\[15\],
    GPIO_ANALOG\[16\],
    GPIO_ANALOG\[17\],
    GPIO_ANALOG\[1\],
    GPIO_ANALOG\[2\],
    GPIO_ANALOG\[3\],
    GPIO_ANALOG\[4\],
    GPIO_ANALOG\[7\],
    GPIO_ANALOG\[8\],
    GPIO_ANALOG\[9\],
    GPIO_NOESD\[0\],
    GPIO_NOESD\[10\],
    GPIO_NOESD\[11\],
    GPIO_NOESD\[12\],
    GPIO_NOESD\[13\],
    GPIO_NOESD\[14\],
    GPIO_NOESD\[15\],
    GPIO_NOESD\[16\],
    GPIO_NOESD\[17\],
    GPIO_NOESD\[1\],
    GPIO_NOESD\[2\],
    GPIO_NOESD\[3\],
    GPIO_NOESD\[4\],
    GPIO_NOESD\[5\],
    GPIO_NOESD\[6\],
    GPIO_NOESD\[7\],
    GPIO_NOESD\[8\],
    GPIO_NOESD\[9\],
    IO_ANALOG\[0\],
    IO_ANALOG\[10\],
    IO_ANALOG\[1\],
    IO_ANALOG\[2\],
    IO_ANALOG\[3\],
    IO_ANALOG\[4\],
    IO_ANALOG\[5\],
    IO_ANALOG\[6\],
    IO_ANALOG\[7\],
    IO_ANALOG\[8\],
    IO_ANALOG\[9\],
    IO_CLAMP_HIGH\[0\],
    IO_CLAMP_HIGH\[1\],
    IO_CLAMP_HIGH\[2\],
    IO_CLAMP_LOW\[0\],
    IO_CLAMP_LOW\[1\],
    IO_CLAMP_LOW\[2\],
    IO_IN\[0\],
    IO_IN\[10\],
    IO_IN\[11\],
    IO_IN\[12\],
    IO_IN\[13\],
    IO_IN\[14\],
    IO_IN\[15\],
    IO_IN\[16\],
    IO_IN\[17\],
    IO_IN\[18\],
    IO_IN\[19\],
    IO_IN\[1\],
    IO_IN\[20\],
    IO_IN\[21\],
    IO_IN\[22\],
    IO_IN\[23\],
    IO_IN\[24\],
    IO_IN\[25\],
    IO_IN\[26\],
    IO_IN\[2\],
    IO_IN\[3\],
    IO_IN\[4\],
    IO_IN\[5\],
    IO_IN\[6\],
    IO_IN\[7\],
    IO_IN\[8\],
    IO_IN\[9\],
    IO_IN_3V3\[0\],
    IO_IN_3V3\[10\],
    IO_IN_3V3\[11\],
    IO_IN_3V3\[12\],
    IO_IN_3V3\[13\],
    IO_IN_3V3\[14\],
    IO_IN_3V3\[15\],
    IO_IN_3V3\[16\],
    IO_IN_3V3\[17\],
    IO_IN_3V3\[18\],
    IO_IN_3V3\[19\],
    IO_IN_3V3\[1\],
    IO_IN_3V3\[20\],
    IO_IN_3V3\[21\],
    IO_IN_3V3\[22\],
    IO_IN_3V3\[23\],
    IO_IN_3V3\[24\],
    IO_IN_3V3\[25\],
    IO_IN_3V3\[26\],
    IO_IN_3V3\[2\],
    IO_IN_3V3\[3\],
    IO_IN_3V3\[4\],
    IO_IN_3V3\[5\],
    IO_IN_3V3\[6\],
    IO_IN_3V3\[7\],
    IO_IN_3V3\[8\],
    IO_IN_3V3\[9\],
    IO_OEB\[0\],
    IO_OEB\[10\],
    IO_OEB\[11\],
    IO_OEB\[12\],
    IO_OEB\[13\],
    IO_OEB\[14\],
    IO_OEB\[15\],
    IO_OEB\[16\],
    IO_OEB\[17\],
    IO_OEB\[18\],
    IO_OEB\[19\],
    IO_OEB\[1\],
    IO_OEB\[20\],
    IO_OEB\[21\],
    IO_OEB\[22\],
    IO_OEB\[23\],
    IO_OEB\[24\],
    IO_OEB\[25\],
    IO_OEB\[26\],
    IO_OEB\[2\],
    IO_OEB\[3\],
    IO_OEB\[4\],
    IO_OEB\[5\],
    IO_OEB\[6\],
    IO_OEB\[7\],
    IO_OEB\[8\],
    IO_OEB\[9\],
    IO_OUT\[0\],
    IO_OUT\[10\],
    IO_OUT\[11\],
    IO_OUT\[12\],
    IO_OUT\[13\],
    IO_OUT\[14\],
    IO_OUT\[15\],
    IO_OUT\[16\],
    IO_OUT\[17\],
    IO_OUT\[18\],
    IO_OUT\[19\],
    IO_OUT\[1\],
    IO_OUT\[20\],
    IO_OUT\[21\],
    IO_OUT\[22\],
    IO_OUT\[23\],
    IO_OUT\[24\],
    IO_OUT\[25\],
    IO_OUT\[26\],
    IO_OUT\[2\],
    IO_OUT\[3\],
    IO_OUT\[4\],
    IO_OUT\[5\],
    IO_OUT\[6\],
    IO_OUT\[7\],
    IO_OUT\[8\],
    IO_OUT\[9\],
    LA_DATA_IN\[0\],
    LA_DATA_IN\[100\],
    LA_DATA_IN\[101\],
    LA_DATA_IN\[102\],
    LA_DATA_IN\[103\],
    LA_DATA_IN\[104\],
    LA_DATA_IN\[105\],
    LA_DATA_IN\[106\],
    LA_DATA_IN\[107\],
    LA_DATA_IN\[108\],
    LA_DATA_IN\[109\],
    LA_DATA_IN\[10\],
    LA_DATA_IN\[110\],
    LA_DATA_IN\[111\],
    LA_DATA_IN\[112\],
    LA_DATA_IN\[113\],
    LA_DATA_IN\[114\],
    LA_DATA_IN\[115\],
    LA_DATA_IN\[116\],
    LA_DATA_IN\[117\],
    LA_DATA_IN\[118\],
    LA_DATA_IN\[119\],
    LA_DATA_IN\[11\],
    LA_DATA_IN\[120\],
    LA_DATA_IN\[121\],
    LA_DATA_IN\[122\],
    LA_DATA_IN\[123\],
    LA_DATA_IN\[124\],
    LA_DATA_IN\[125\],
    LA_DATA_IN\[126\],
    LA_DATA_IN\[127\],
    LA_DATA_IN\[12\],
    LA_DATA_IN\[13\],
    LA_DATA_IN\[14\],
    LA_DATA_IN\[15\],
    LA_DATA_IN\[16\],
    LA_DATA_IN\[17\],
    LA_DATA_IN\[18\],
    LA_DATA_IN\[19\],
    LA_DATA_IN\[1\],
    LA_DATA_IN\[20\],
    LA_DATA_IN\[21\],
    LA_DATA_IN\[22\],
    LA_DATA_IN\[23\],
    LA_DATA_IN\[24\],
    LA_DATA_IN\[25\],
    LA_DATA_IN\[26\],
    LA_DATA_IN\[27\],
    LA_DATA_IN\[28\],
    LA_DATA_IN\[29\],
    LA_DATA_IN\[2\],
    LA_DATA_IN\[30\],
    LA_DATA_IN\[31\],
    LA_DATA_IN\[32\],
    LA_DATA_IN\[33\],
    LA_DATA_IN\[34\],
    LA_DATA_IN\[35\],
    LA_DATA_IN\[36\],
    LA_DATA_IN\[37\],
    LA_DATA_IN\[38\],
    LA_DATA_IN\[39\],
    LA_DATA_IN\[3\],
    LA_DATA_IN\[40\],
    LA_DATA_IN\[41\],
    LA_DATA_IN\[42\],
    LA_DATA_IN\[43\],
    LA_DATA_IN\[44\],
    LA_DATA_IN\[45\],
    LA_DATA_IN\[46\],
    LA_DATA_IN\[47\],
    LA_DATA_IN\[48\],
    LA_DATA_IN\[49\],
    LA_DATA_IN\[4\],
    LA_DATA_IN\[50\],
    LA_DATA_IN\[51\],
    LA_DATA_IN\[52\],
    LA_DATA_IN\[53\],
    LA_DATA_IN\[54\],
    LA_DATA_IN\[55\],
    LA_DATA_IN\[56\],
    LA_DATA_IN\[57\],
    LA_DATA_IN\[58\],
    LA_DATA_IN\[59\],
    LA_DATA_IN\[5\],
    LA_DATA_IN\[60\],
    LA_DATA_IN\[61\],
    LA_DATA_IN\[62\],
    LA_DATA_IN\[63\],
    LA_DATA_IN\[64\],
    LA_DATA_IN\[65\],
    LA_DATA_IN\[66\],
    LA_DATA_IN\[67\],
    LA_DATA_IN\[68\],
    LA_DATA_IN\[69\],
    LA_DATA_IN\[6\],
    LA_DATA_IN\[70\],
    LA_DATA_IN\[71\],
    LA_DATA_IN\[72\],
    LA_DATA_IN\[73\],
    LA_DATA_IN\[74\],
    LA_DATA_IN\[75\],
    LA_DATA_IN\[76\],
    LA_DATA_IN\[77\],
    LA_DATA_IN\[78\],
    LA_DATA_IN\[79\],
    LA_DATA_IN\[7\],
    LA_DATA_IN\[80\],
    LA_DATA_IN\[81\],
    LA_DATA_IN\[82\],
    LA_DATA_IN\[83\],
    LA_DATA_IN\[84\],
    LA_DATA_IN\[85\],
    LA_DATA_IN\[86\],
    LA_DATA_IN\[87\],
    LA_DATA_IN\[88\],
    LA_DATA_IN\[89\],
    LA_DATA_IN\[8\],
    LA_DATA_IN\[90\],
    LA_DATA_IN\[91\],
    LA_DATA_IN\[92\],
    LA_DATA_IN\[93\],
    LA_DATA_IN\[94\],
    LA_DATA_IN\[95\],
    LA_DATA_IN\[96\],
    LA_DATA_IN\[97\],
    LA_DATA_IN\[98\],
    LA_DATA_IN\[99\],
    LA_DATA_IN\[9\],
    LA_DATA_OUT\[0\],
    LA_DATA_OUT\[100\],
    LA_DATA_OUT\[101\],
    LA_DATA_OUT\[102\],
    LA_DATA_OUT\[103\],
    LA_DATA_OUT\[104\],
    LA_DATA_OUT\[105\],
    LA_DATA_OUT\[106\],
    LA_DATA_OUT\[107\],
    LA_DATA_OUT\[108\],
    LA_DATA_OUT\[109\],
    LA_DATA_OUT\[10\],
    LA_DATA_OUT\[110\],
    LA_DATA_OUT\[111\],
    LA_DATA_OUT\[112\],
    LA_DATA_OUT\[113\],
    LA_DATA_OUT\[114\],
    LA_DATA_OUT\[115\],
    LA_DATA_OUT\[116\],
    LA_DATA_OUT\[117\],
    LA_DATA_OUT\[118\],
    LA_DATA_OUT\[119\],
    LA_DATA_OUT\[11\],
    LA_DATA_OUT\[120\],
    LA_DATA_OUT\[121\],
    LA_DATA_OUT\[122\],
    LA_DATA_OUT\[123\],
    LA_DATA_OUT\[124\],
    LA_DATA_OUT\[125\],
    LA_DATA_OUT\[126\],
    LA_DATA_OUT\[127\],
    LA_DATA_OUT\[12\],
    LA_DATA_OUT\[13\],
    LA_DATA_OUT\[14\],
    LA_DATA_OUT\[15\],
    LA_DATA_OUT\[16\],
    LA_DATA_OUT\[17\],
    LA_DATA_OUT\[18\],
    LA_DATA_OUT\[19\],
    LA_DATA_OUT\[1\],
    LA_DATA_OUT\[20\],
    LA_DATA_OUT\[21\],
    LA_DATA_OUT\[22\],
    LA_DATA_OUT\[23\],
    LA_DATA_OUT\[24\],
    LA_DATA_OUT\[25\],
    LA_DATA_OUT\[26\],
    LA_DATA_OUT\[27\],
    LA_DATA_OUT\[28\],
    LA_DATA_OUT\[29\],
    LA_DATA_OUT\[2\],
    LA_DATA_OUT\[30\],
    LA_DATA_OUT\[31\],
    LA_DATA_OUT\[32\],
    LA_DATA_OUT\[33\],
    LA_DATA_OUT\[34\],
    LA_DATA_OUT\[35\],
    LA_DATA_OUT\[36\],
    LA_DATA_OUT\[37\],
    LA_DATA_OUT\[38\],
    LA_DATA_OUT\[39\],
    LA_DATA_OUT\[3\],
    LA_DATA_OUT\[40\],
    LA_DATA_OUT\[41\],
    LA_DATA_OUT\[42\],
    LA_DATA_OUT\[43\],
    LA_DATA_OUT\[44\],
    LA_DATA_OUT\[45\],
    LA_DATA_OUT\[46\],
    LA_DATA_OUT\[47\],
    LA_DATA_OUT\[48\],
    LA_DATA_OUT\[49\],
    LA_DATA_OUT\[4\],
    LA_DATA_OUT\[50\],
    LA_DATA_OUT\[51\],
    LA_DATA_OUT\[52\],
    LA_DATA_OUT\[53\],
    LA_DATA_OUT\[54\],
    LA_DATA_OUT\[55\],
    LA_DATA_OUT\[56\],
    LA_DATA_OUT\[57\],
    LA_DATA_OUT\[58\],
    LA_DATA_OUT\[59\],
    LA_DATA_OUT\[5\],
    LA_DATA_OUT\[60\],
    LA_DATA_OUT\[61\],
    LA_DATA_OUT\[62\],
    LA_DATA_OUT\[63\],
    LA_DATA_OUT\[64\],
    LA_DATA_OUT\[65\],
    LA_DATA_OUT\[66\],
    LA_DATA_OUT\[67\],
    LA_DATA_OUT\[68\],
    LA_DATA_OUT\[69\],
    LA_DATA_OUT\[6\],
    LA_DATA_OUT\[70\],
    LA_DATA_OUT\[71\],
    LA_DATA_OUT\[72\],
    LA_DATA_OUT\[73\],
    LA_DATA_OUT\[74\],
    LA_DATA_OUT\[75\],
    LA_DATA_OUT\[76\],
    LA_DATA_OUT\[77\],
    LA_DATA_OUT\[78\],
    LA_DATA_OUT\[79\],
    LA_DATA_OUT\[7\],
    LA_DATA_OUT\[80\],
    LA_DATA_OUT\[81\],
    LA_DATA_OUT\[82\],
    LA_DATA_OUT\[83\],
    LA_DATA_OUT\[84\],
    LA_DATA_OUT\[85\],
    LA_DATA_OUT\[86\],
    LA_DATA_OUT\[87\],
    LA_DATA_OUT\[88\],
    LA_DATA_OUT\[89\],
    LA_DATA_OUT\[8\],
    LA_DATA_OUT\[90\],
    LA_DATA_OUT\[91\],
    LA_DATA_OUT\[92\],
    LA_DATA_OUT\[93\],
    LA_DATA_OUT\[94\],
    LA_DATA_OUT\[95\],
    LA_DATA_OUT\[96\],
    LA_DATA_OUT\[97\],
    LA_DATA_OUT\[98\],
    LA_DATA_OUT\[99\],
    LA_DATA_OUT\[9\],
    LA_OENB\[0\],
    LA_OENB\[100\],
    LA_OENB\[101\],
    LA_OENB\[102\],
    LA_OENB\[103\],
    LA_OENB\[104\],
    LA_OENB\[105\],
    LA_OENB\[106\],
    LA_OENB\[107\],
    LA_OENB\[108\],
    LA_OENB\[109\],
    LA_OENB\[10\],
    LA_OENB\[110\],
    LA_OENB\[111\],
    LA_OENB\[112\],
    LA_OENB\[113\],
    LA_OENB\[114\],
    LA_OENB\[115\],
    LA_OENB\[116\],
    LA_OENB\[117\],
    LA_OENB\[118\],
    LA_OENB\[119\],
    LA_OENB\[11\],
    LA_OENB\[120\],
    LA_OENB\[121\],
    LA_OENB\[122\],
    LA_OENB\[123\],
    LA_OENB\[124\],
    LA_OENB\[125\],
    LA_OENB\[126\],
    LA_OENB\[127\],
    LA_OENB\[12\],
    LA_OENB\[13\],
    LA_OENB\[14\],
    LA_OENB\[15\],
    LA_OENB\[16\],
    LA_OENB\[17\],
    LA_OENB\[18\],
    LA_OENB\[19\],
    LA_OENB\[1\],
    LA_OENB\[20\],
    LA_OENB\[21\],
    LA_OENB\[22\],
    LA_OENB\[23\],
    LA_OENB\[24\],
    LA_OENB\[25\],
    LA_OENB\[26\],
    LA_OENB\[27\],
    LA_OENB\[28\],
    LA_OENB\[29\],
    LA_OENB\[2\],
    LA_OENB\[30\],
    LA_OENB\[31\],
    LA_OENB\[32\],
    LA_OENB\[33\],
    LA_OENB\[34\],
    LA_OENB\[35\],
    LA_OENB\[36\],
    LA_OENB\[37\],
    LA_OENB\[38\],
    LA_OENB\[39\],
    LA_OENB\[3\],
    LA_OENB\[40\],
    LA_OENB\[41\],
    LA_OENB\[42\],
    LA_OENB\[43\],
    LA_OENB\[44\],
    LA_OENB\[45\],
    LA_OENB\[46\],
    LA_OENB\[47\],
    LA_OENB\[48\],
    LA_OENB\[49\],
    LA_OENB\[4\],
    LA_OENB\[50\],
    LA_OENB\[51\],
    LA_OENB\[52\],
    LA_OENB\[53\],
    LA_OENB\[54\],
    LA_OENB\[55\],
    LA_OENB\[56\],
    LA_OENB\[57\],
    LA_OENB\[58\],
    LA_OENB\[59\],
    LA_OENB\[5\],
    LA_OENB\[60\],
    LA_OENB\[61\],
    LA_OENB\[62\],
    LA_OENB\[63\],
    LA_OENB\[64\],
    LA_OENB\[65\],
    LA_OENB\[66\],
    LA_OENB\[67\],
    LA_OENB\[68\],
    LA_OENB\[69\],
    LA_OENB\[6\],
    LA_OENB\[70\],
    LA_OENB\[71\],
    LA_OENB\[72\],
    LA_OENB\[73\],
    LA_OENB\[74\],
    LA_OENB\[75\],
    LA_OENB\[76\],
    LA_OENB\[77\],
    LA_OENB\[78\],
    LA_OENB\[79\],
    LA_OENB\[7\],
    LA_OENB\[80\],
    LA_OENB\[81\],
    LA_OENB\[82\],
    LA_OENB\[83\],
    LA_OENB\[84\],
    LA_OENB\[85\],
    LA_OENB\[86\],
    LA_OENB\[87\],
    LA_OENB\[88\],
    LA_OENB\[89\],
    LA_OENB\[8\],
    LA_OENB\[90\],
    LA_OENB\[91\],
    LA_OENB\[92\],
    LA_OENB\[93\],
    LA_OENB\[94\],
    LA_OENB\[95\],
    LA_OENB\[96\],
    LA_OENB\[97\],
    LA_OENB\[98\],
    LA_OENB\[99\],
    LA_OENB\[9\],
    USER_CLOCK2,
    USER_IRQ\[0\],
    USER_IRQ\[1\],
    USER_IRQ\[2\],
    VCCD1,
    VCCD2,
    VDDA1,
    VDDA2,
    VSSA1,
    VSSA2,
    VSSD1,
    VSSD2,
    WBS_ACK_O,
    WBS_ADR_I\[0\],
    WBS_ADR_I\[10\],
    WBS_ADR_I\[11\],
    WBS_ADR_I\[12\],
    WBS_ADR_I\[13\],
    WBS_ADR_I\[14\],
    WBS_ADR_I\[15\],
    WBS_ADR_I\[16\],
    WBS_ADR_I\[17\],
    WBS_ADR_I\[18\],
    WBS_ADR_I\[19\],
    WBS_ADR_I\[1\],
    WBS_ADR_I\[20\],
    WBS_ADR_I\[21\],
    WBS_ADR_I\[22\],
    WBS_ADR_I\[23\],
    WBS_ADR_I\[24\],
    WBS_ADR_I\[25\],
    WBS_ADR_I\[26\],
    WBS_ADR_I\[27\],
    WBS_ADR_I\[28\],
    WBS_ADR_I\[29\],
    WBS_ADR_I\[2\],
    WBS_ADR_I\[30\],
    WBS_ADR_I\[31\],
    WBS_ADR_I\[3\],
    WBS_ADR_I\[4\],
    WBS_ADR_I\[5\],
    WBS_ADR_I\[6\],
    WBS_ADR_I\[7\],
    WBS_ADR_I\[8\],
    WBS_ADR_I\[9\],
    WBS_CYC_I,
    WBS_DAT_I\[0\],
    WBS_DAT_I\[10\],
    WBS_DAT_I\[11\],
    WBS_DAT_I\[12\],
    WBS_DAT_I\[13\],
    WBS_DAT_I\[14\],
    WBS_DAT_I\[15\],
    WBS_DAT_I\[16\],
    WBS_DAT_I\[17\],
    WBS_DAT_I\[18\],
    WBS_DAT_I\[19\],
    WBS_DAT_I\[1\],
    WBS_DAT_I\[20\],
    WBS_DAT_I\[21\],
    WBS_DAT_I\[22\],
    WBS_DAT_I\[23\],
    WBS_DAT_I\[24\],
    WBS_DAT_I\[25\],
    WBS_DAT_I\[26\],
    WBS_DAT_I\[27\],
    WBS_DAT_I\[28\],
    WBS_DAT_I\[29\],
    WBS_DAT_I\[2\],
    WBS_DAT_I\[30\],
    WBS_DAT_I\[31\],
    WBS_DAT_I\[3\],
    WBS_DAT_I\[4\],
    WBS_DAT_I\[5\],
    WBS_DAT_I\[6\],
    WBS_DAT_I\[7\],
    WBS_DAT_I\[8\],
    WBS_DAT_I\[9\],
    WBS_DAT_O\[0\],
    WBS_DAT_O\[10\],
    WBS_DAT_O\[11\],
    WBS_DAT_O\[12\],
    WBS_DAT_O\[13\],
    WBS_DAT_O\[14\],
    WBS_DAT_O\[15\],
    WBS_DAT_O\[16\],
    WBS_DAT_O\[17\],
    WBS_DAT_O\[18\],
    WBS_DAT_O\[19\],
    WBS_DAT_O\[1\],
    WBS_DAT_O\[20\],
    WBS_DAT_O\[21\],
    WBS_DAT_O\[22\],
    WBS_DAT_O\[23\],
    WBS_DAT_O\[24\],
    WBS_DAT_O\[25\],
    WBS_DAT_O\[26\],
    WBS_DAT_O\[27\],
    WBS_DAT_O\[28\],
    WBS_DAT_O\[29\],
    WBS_DAT_O\[2\],
    WBS_DAT_O\[30\],
    WBS_DAT_O\[31\],
    WBS_DAT_O\[3\],
    WBS_DAT_O\[4\],
    WBS_DAT_O\[5\],
    WBS_DAT_O\[6\],
    WBS_DAT_O\[7\],
    WBS_DAT_O\[8\],
    WBS_DAT_O\[9\],
    WBS_SEL_I\[0\],
    WBS_SEL_I\[1\],
    WBS_SEL_I\[2\],
    WBS_SEL_I\[3\],
    WBS_STB_I,
    WBS_WE_I,
    WB_CLK_I,
    WB_RST_I
);
        inout GPIO_ANALOG\[0\];
        inout GPIO_ANALOG\[10\];
        inout GPIO_ANALOG\[11\];
        inout GPIO_ANALOG\[12\];
        inout GPIO_ANALOG\[13\];
        inout GPIO_ANALOG\[14\];
        inout GPIO_ANALOG\[15\];
        inout GPIO_ANALOG\[16\];
        inout GPIO_ANALOG\[17\];
        inout GPIO_ANALOG\[1\];
        inout GPIO_ANALOG\[2\];
        inout GPIO_ANALOG\[3\];
        inout GPIO_ANALOG\[4\];
        inout GPIO_ANALOG\[7\];
        inout GPIO_ANALOG\[8\];
        inout GPIO_ANALOG\[9\];
        inout GPIO_NOESD\[0\];
        inout GPIO_NOESD\[10\];
        inout GPIO_NOESD\[11\];
        inout GPIO_NOESD\[12\];
        inout GPIO_NOESD\[13\];
        inout GPIO_NOESD\[14\];
        inout GPIO_NOESD\[15\];
        inout GPIO_NOESD\[16\];
        inout GPIO_NOESD\[17\];
        inout GPIO_NOESD\[1\];
        inout GPIO_NOESD\[2\];
        inout GPIO_NOESD\[3\];
        inout GPIO_NOESD\[4\];
        inout GPIO_NOESD\[5\];
        inout GPIO_NOESD\[6\];
        inout GPIO_NOESD\[7\];
        inout GPIO_NOESD\[8\];
        inout GPIO_NOESD\[9\];
        inout IO_ANALOG\[0\];
        inout IO_ANALOG\[10\];
        inout IO_ANALOG\[1\];
        inout IO_ANALOG\[2\];
        inout IO_ANALOG\[3\];
        inout IO_ANALOG\[4\];
        inout IO_ANALOG\[5\];
        inout IO_ANALOG\[6\];
        inout IO_ANALOG\[7\];
        inout IO_ANALOG\[8\];
        inout IO_ANALOG\[9\];
        inout IO_CLAMP_HIGH\[0\];
        inout IO_CLAMP_HIGH\[1\];
        inout IO_CLAMP_HIGH\[2\];
        inout IO_CLAMP_LOW\[0\];
        inout IO_CLAMP_LOW\[1\];
        inout IO_CLAMP_LOW\[2\];
        inout IO_IN\[0\];
        inout IO_IN\[10\];
        inout IO_IN\[11\];
        inout IO_IN\[12\];
        inout IO_IN\[13\];
        inout IO_IN\[14\];
        inout IO_IN\[15\];
        inout IO_IN\[16\];
        inout IO_IN\[17\];
        inout IO_IN\[18\];
        inout IO_IN\[19\];
        inout IO_IN\[1\];
        inout IO_IN\[20\];
        inout IO_IN\[21\];
        inout IO_IN\[22\];
        inout IO_IN\[23\];
        inout IO_IN\[24\];
        inout IO_IN\[25\];
        inout IO_IN\[26\];
        inout IO_IN\[2\];
        inout IO_IN\[3\];
        inout IO_IN\[4\];
        inout IO_IN\[5\];
        inout IO_IN\[6\];
        inout IO_IN\[7\];
        inout IO_IN\[8\];
        inout IO_IN\[9\];
        inout IO_IN_3V3\[0\];
        inout IO_IN_3V3\[10\];
        inout IO_IN_3V3\[11\];
        inout IO_IN_3V3\[12\];
        inout IO_IN_3V3\[13\];
        inout IO_IN_3V3\[14\];
        inout IO_IN_3V3\[15\];
        inout IO_IN_3V3\[16\];
        inout IO_IN_3V3\[17\];
        inout IO_IN_3V3\[18\];
        inout IO_IN_3V3\[19\];
        inout IO_IN_3V3\[1\];
        inout IO_IN_3V3\[20\];
        inout IO_IN_3V3\[21\];
        inout IO_IN_3V3\[22\];
        inout IO_IN_3V3\[23\];
        inout IO_IN_3V3\[24\];
        inout IO_IN_3V3\[25\];
        inout IO_IN_3V3\[26\];
        inout IO_IN_3V3\[2\];
        inout IO_IN_3V3\[3\];
        inout IO_IN_3V3\[4\];
        inout IO_IN_3V3\[5\];
        inout IO_IN_3V3\[6\];
        inout IO_IN_3V3\[7\];
        inout IO_IN_3V3\[8\];
        inout IO_IN_3V3\[9\];
        inout IO_OEB\[0\];
        inout IO_OEB\[10\];
        inout IO_OEB\[11\];
        inout IO_OEB\[12\];
        inout IO_OEB\[13\];
        inout IO_OEB\[14\];
        inout IO_OEB\[15\];
        inout IO_OEB\[16\];
        inout IO_OEB\[17\];
        inout IO_OEB\[18\];
        inout IO_OEB\[19\];
        inout IO_OEB\[1\];
        inout IO_OEB\[20\];
        inout IO_OEB\[21\];
        inout IO_OEB\[22\];
        inout IO_OEB\[23\];
        inout IO_OEB\[24\];
        inout IO_OEB\[25\];
        inout IO_OEB\[26\];
        inout IO_OEB\[2\];
        inout IO_OEB\[3\];
        inout IO_OEB\[4\];
        inout IO_OEB\[5\];
        inout IO_OEB\[6\];
        inout IO_OEB\[7\];
        inout IO_OEB\[8\];
        inout IO_OEB\[9\];
        inout IO_OUT\[0\];
        inout IO_OUT\[10\];
        inout IO_OUT\[11\];
        inout IO_OUT\[12\];
        inout IO_OUT\[13\];
        inout IO_OUT\[14\];
        inout IO_OUT\[15\];
        inout IO_OUT\[16\];
        inout IO_OUT\[17\];
        inout IO_OUT\[18\];
        inout IO_OUT\[19\];
        inout IO_OUT\[1\];
        inout IO_OUT\[20\];
        inout IO_OUT\[21\];
        inout IO_OUT\[22\];
        inout IO_OUT\[23\];
        inout IO_OUT\[24\];
        inout IO_OUT\[25\];
        inout IO_OUT\[26\];
        inout IO_OUT\[2\];
        inout IO_OUT\[3\];
        inout IO_OUT\[4\];
        inout IO_OUT\[5\];
        inout IO_OUT\[6\];
        inout IO_OUT\[7\];
        inout IO_OUT\[8\];
        inout IO_OUT\[9\];
        inout LA_DATA_IN\[0\];
        inout LA_DATA_IN\[100\];
        inout LA_DATA_IN\[101\];
        inout LA_DATA_IN\[102\];
        inout LA_DATA_IN\[103\];
        inout LA_DATA_IN\[104\];
        inout LA_DATA_IN\[105\];
        inout LA_DATA_IN\[106\];
        inout LA_DATA_IN\[107\];
        inout LA_DATA_IN\[108\];
        inout LA_DATA_IN\[109\];
        inout LA_DATA_IN\[10\];
        inout LA_DATA_IN\[110\];
        inout LA_DATA_IN\[111\];
        inout LA_DATA_IN\[112\];
        inout LA_DATA_IN\[113\];
        inout LA_DATA_IN\[114\];
        inout LA_DATA_IN\[115\];
        inout LA_DATA_IN\[116\];
        inout LA_DATA_IN\[117\];
        inout LA_DATA_IN\[118\];
        inout LA_DATA_IN\[119\];
        inout LA_DATA_IN\[11\];
        inout LA_DATA_IN\[120\];
        inout LA_DATA_IN\[121\];
        inout LA_DATA_IN\[122\];
        inout LA_DATA_IN\[123\];
        inout LA_DATA_IN\[124\];
        inout LA_DATA_IN\[125\];
        inout LA_DATA_IN\[126\];
        inout LA_DATA_IN\[127\];
        inout LA_DATA_IN\[12\];
        inout LA_DATA_IN\[13\];
        inout LA_DATA_IN\[14\];
        inout LA_DATA_IN\[15\];
        inout LA_DATA_IN\[16\];
        inout LA_DATA_IN\[17\];
        inout LA_DATA_IN\[18\];
        inout LA_DATA_IN\[19\];
        inout LA_DATA_IN\[1\];
        inout LA_DATA_IN\[20\];
        inout LA_DATA_IN\[21\];
        inout LA_DATA_IN\[22\];
        inout LA_DATA_IN\[23\];
        inout LA_DATA_IN\[24\];
        inout LA_DATA_IN\[25\];
        inout LA_DATA_IN\[26\];
        inout LA_DATA_IN\[27\];
        inout LA_DATA_IN\[28\];
        inout LA_DATA_IN\[29\];
        inout LA_DATA_IN\[2\];
        inout LA_DATA_IN\[30\];
        inout LA_DATA_IN\[31\];
        inout LA_DATA_IN\[32\];
        inout LA_DATA_IN\[33\];
        inout LA_DATA_IN\[34\];
        inout LA_DATA_IN\[35\];
        inout LA_DATA_IN\[36\];
        inout LA_DATA_IN\[37\];
        inout LA_DATA_IN\[38\];
        inout LA_DATA_IN\[39\];
        inout LA_DATA_IN\[3\];
        inout LA_DATA_IN\[40\];
        inout LA_DATA_IN\[41\];
        inout LA_DATA_IN\[42\];
        inout LA_DATA_IN\[43\];
        inout LA_DATA_IN\[44\];
        inout LA_DATA_IN\[45\];
        inout LA_DATA_IN\[46\];
        inout LA_DATA_IN\[47\];
        inout LA_DATA_IN\[48\];
        inout LA_DATA_IN\[49\];
        inout LA_DATA_IN\[4\];
        inout LA_DATA_IN\[50\];
        inout LA_DATA_IN\[51\];
        inout LA_DATA_IN\[52\];
        inout LA_DATA_IN\[53\];
        inout LA_DATA_IN\[54\];
        inout LA_DATA_IN\[55\];
        inout LA_DATA_IN\[56\];
        inout LA_DATA_IN\[57\];
        inout LA_DATA_IN\[58\];
        inout LA_DATA_IN\[59\];
        inout LA_DATA_IN\[5\];
        inout LA_DATA_IN\[60\];
        inout LA_DATA_IN\[61\];
        inout LA_DATA_IN\[62\];
        inout LA_DATA_IN\[63\];
        inout LA_DATA_IN\[64\];
        inout LA_DATA_IN\[65\];
        inout LA_DATA_IN\[66\];
        inout LA_DATA_IN\[67\];
        inout LA_DATA_IN\[68\];
        inout LA_DATA_IN\[69\];
        inout LA_DATA_IN\[6\];
        inout LA_DATA_IN\[70\];
        inout LA_DATA_IN\[71\];
        inout LA_DATA_IN\[72\];
        inout LA_DATA_IN\[73\];
        inout LA_DATA_IN\[74\];
        inout LA_DATA_IN\[75\];
        inout LA_DATA_IN\[76\];
        inout LA_DATA_IN\[77\];
        inout LA_DATA_IN\[78\];
        inout LA_DATA_IN\[79\];
        inout LA_DATA_IN\[7\];
        inout LA_DATA_IN\[80\];
        inout LA_DATA_IN\[81\];
        inout LA_DATA_IN\[82\];
        inout LA_DATA_IN\[83\];
        inout LA_DATA_IN\[84\];
        inout LA_DATA_IN\[85\];
        inout LA_DATA_IN\[86\];
        inout LA_DATA_IN\[87\];
        inout LA_DATA_IN\[88\];
        inout LA_DATA_IN\[89\];
        inout LA_DATA_IN\[8\];
        inout LA_DATA_IN\[90\];
        inout LA_DATA_IN\[91\];
        inout LA_DATA_IN\[92\];
        inout LA_DATA_IN\[93\];
        inout LA_DATA_IN\[94\];
        inout LA_DATA_IN\[95\];
        inout LA_DATA_IN\[96\];
        inout LA_DATA_IN\[97\];
        inout LA_DATA_IN\[98\];
        inout LA_DATA_IN\[99\];
        inout LA_DATA_IN\[9\];
        inout LA_DATA_OUT\[0\];
        inout LA_DATA_OUT\[100\];
        inout LA_DATA_OUT\[101\];
        inout LA_DATA_OUT\[102\];
        inout LA_DATA_OUT\[103\];
        inout LA_DATA_OUT\[104\];
        inout LA_DATA_OUT\[105\];
        inout LA_DATA_OUT\[106\];
        inout LA_DATA_OUT\[107\];
        inout LA_DATA_OUT\[108\];
        inout LA_DATA_OUT\[109\];
        inout LA_DATA_OUT\[10\];
        inout LA_DATA_OUT\[110\];
        inout LA_DATA_OUT\[111\];
        inout LA_DATA_OUT\[112\];
        inout LA_DATA_OUT\[113\];
        inout LA_DATA_OUT\[114\];
        inout LA_DATA_OUT\[115\];
        inout LA_DATA_OUT\[116\];
        inout LA_DATA_OUT\[117\];
        inout LA_DATA_OUT\[118\];
        inout LA_DATA_OUT\[119\];
        inout LA_DATA_OUT\[11\];
        inout LA_DATA_OUT\[120\];
        inout LA_DATA_OUT\[121\];
        inout LA_DATA_OUT\[122\];
        inout LA_DATA_OUT\[123\];
        inout LA_DATA_OUT\[124\];
        inout LA_DATA_OUT\[125\];
        inout LA_DATA_OUT\[126\];
        inout LA_DATA_OUT\[127\];
        inout LA_DATA_OUT\[12\];
        inout LA_DATA_OUT\[13\];
        inout LA_DATA_OUT\[14\];
        inout LA_DATA_OUT\[15\];
        inout LA_DATA_OUT\[16\];
        inout LA_DATA_OUT\[17\];
        inout LA_DATA_OUT\[18\];
        inout LA_DATA_OUT\[19\];
        inout LA_DATA_OUT\[1\];
        inout LA_DATA_OUT\[20\];
        inout LA_DATA_OUT\[21\];
        inout LA_DATA_OUT\[22\];
        inout LA_DATA_OUT\[23\];
        inout LA_DATA_OUT\[24\];
        inout LA_DATA_OUT\[25\];
        inout LA_DATA_OUT\[26\];
        inout LA_DATA_OUT\[27\];
        inout LA_DATA_OUT\[28\];
        inout LA_DATA_OUT\[29\];
        inout LA_DATA_OUT\[2\];
        inout LA_DATA_OUT\[30\];
        inout LA_DATA_OUT\[31\];
        inout LA_DATA_OUT\[32\];
        inout LA_DATA_OUT\[33\];
        inout LA_DATA_OUT\[34\];
        inout LA_DATA_OUT\[35\];
        inout LA_DATA_OUT\[36\];
        inout LA_DATA_OUT\[37\];
        inout LA_DATA_OUT\[38\];
        inout LA_DATA_OUT\[39\];
        inout LA_DATA_OUT\[3\];
        inout LA_DATA_OUT\[40\];
        inout LA_DATA_OUT\[41\];
        inout LA_DATA_OUT\[42\];
        inout LA_DATA_OUT\[43\];
        inout LA_DATA_OUT\[44\];
        inout LA_DATA_OUT\[45\];
        inout LA_DATA_OUT\[46\];
        inout LA_DATA_OUT\[47\];
        inout LA_DATA_OUT\[48\];
        inout LA_DATA_OUT\[49\];
        inout LA_DATA_OUT\[4\];
        inout LA_DATA_OUT\[50\];
        inout LA_DATA_OUT\[51\];
        inout LA_DATA_OUT\[52\];
        inout LA_DATA_OUT\[53\];
        inout LA_DATA_OUT\[54\];
        inout LA_DATA_OUT\[55\];
        inout LA_DATA_OUT\[56\];
        inout LA_DATA_OUT\[57\];
        inout LA_DATA_OUT\[58\];
        inout LA_DATA_OUT\[59\];
        inout LA_DATA_OUT\[5\];
        inout LA_DATA_OUT\[60\];
        inout LA_DATA_OUT\[61\];
        inout LA_DATA_OUT\[62\];
        inout LA_DATA_OUT\[63\];
        inout LA_DATA_OUT\[64\];
        inout LA_DATA_OUT\[65\];
        inout LA_DATA_OUT\[66\];
        inout LA_DATA_OUT\[67\];
        inout LA_DATA_OUT\[68\];
        inout LA_DATA_OUT\[69\];
        inout LA_DATA_OUT\[6\];
        inout LA_DATA_OUT\[70\];
        inout LA_DATA_OUT\[71\];
        inout LA_DATA_OUT\[72\];
        inout LA_DATA_OUT\[73\];
        inout LA_DATA_OUT\[74\];
        inout LA_DATA_OUT\[75\];
        inout LA_DATA_OUT\[76\];
        inout LA_DATA_OUT\[77\];
        inout LA_DATA_OUT\[78\];
        inout LA_DATA_OUT\[79\];
        inout LA_DATA_OUT\[7\];
        inout LA_DATA_OUT\[80\];
        inout LA_DATA_OUT\[81\];
        inout LA_DATA_OUT\[82\];
        inout LA_DATA_OUT\[83\];
        inout LA_DATA_OUT\[84\];
        inout LA_DATA_OUT\[85\];
        inout LA_DATA_OUT\[86\];
        inout LA_DATA_OUT\[87\];
        inout LA_DATA_OUT\[88\];
        inout LA_DATA_OUT\[89\];
        inout LA_DATA_OUT\[8\];
        inout LA_DATA_OUT\[90\];
        inout LA_DATA_OUT\[91\];
        inout LA_DATA_OUT\[92\];
        inout LA_DATA_OUT\[93\];
        inout LA_DATA_OUT\[94\];
        inout LA_DATA_OUT\[95\];
        inout LA_DATA_OUT\[96\];
        inout LA_DATA_OUT\[97\];
        inout LA_DATA_OUT\[98\];
        inout LA_DATA_OUT\[99\];
        inout LA_DATA_OUT\[9\];
        inout LA_OENB\[0\];
        inout LA_OENB\[100\];
        inout LA_OENB\[101\];
        inout LA_OENB\[102\];
        inout LA_OENB\[103\];
        inout LA_OENB\[104\];
        inout LA_OENB\[105\];
        inout LA_OENB\[106\];
        inout LA_OENB\[107\];
        inout LA_OENB\[108\];
        inout LA_OENB\[109\];
        inout LA_OENB\[10\];
        inout LA_OENB\[110\];
        inout LA_OENB\[111\];
        inout LA_OENB\[112\];
        inout LA_OENB\[113\];
        inout LA_OENB\[114\];
        inout LA_OENB\[115\];
        inout LA_OENB\[116\];
        inout LA_OENB\[117\];
        inout LA_OENB\[118\];
        inout LA_OENB\[119\];
        inout LA_OENB\[11\];
        inout LA_OENB\[120\];
        inout LA_OENB\[121\];
        inout LA_OENB\[122\];
        inout LA_OENB\[123\];
        inout LA_OENB\[124\];
        inout LA_OENB\[125\];
        inout LA_OENB\[126\];
        inout LA_OENB\[127\];
        inout LA_OENB\[12\];
        inout LA_OENB\[13\];
        inout LA_OENB\[14\];
        inout LA_OENB\[15\];
        inout LA_OENB\[16\];
        inout LA_OENB\[17\];
        inout LA_OENB\[18\];
        inout LA_OENB\[19\];
        inout LA_OENB\[1\];
        inout LA_OENB\[20\];
        inout LA_OENB\[21\];
        inout LA_OENB\[22\];
        inout LA_OENB\[23\];
        inout LA_OENB\[24\];
        inout LA_OENB\[25\];
        inout LA_OENB\[26\];
        inout LA_OENB\[27\];
        inout LA_OENB\[28\];
        inout LA_OENB\[29\];
        inout LA_OENB\[2\];
        inout LA_OENB\[30\];
        inout LA_OENB\[31\];
        inout LA_OENB\[32\];
        inout LA_OENB\[33\];
        inout LA_OENB\[34\];
        inout LA_OENB\[35\];
        inout LA_OENB\[36\];
        inout LA_OENB\[37\];
        inout LA_OENB\[38\];
        inout LA_OENB\[39\];
        inout LA_OENB\[3\];
        inout LA_OENB\[40\];
        inout LA_OENB\[41\];
        inout LA_OENB\[42\];
        inout LA_OENB\[43\];
        inout LA_OENB\[44\];
        inout LA_OENB\[45\];
        inout LA_OENB\[46\];
        inout LA_OENB\[47\];
        inout LA_OENB\[48\];
        inout LA_OENB\[49\];
        inout LA_OENB\[4\];
        inout LA_OENB\[50\];
        inout LA_OENB\[51\];
        inout LA_OENB\[52\];
        inout LA_OENB\[53\];
        inout LA_OENB\[54\];
        inout LA_OENB\[55\];
        inout LA_OENB\[56\];
        inout LA_OENB\[57\];
        inout LA_OENB\[58\];
        inout LA_OENB\[59\];
        inout LA_OENB\[5\];
        inout LA_OENB\[60\];
        inout LA_OENB\[61\];
        inout LA_OENB\[62\];
        inout LA_OENB\[63\];
        inout LA_OENB\[64\];
        inout LA_OENB\[65\];
        inout LA_OENB\[66\];
        inout LA_OENB\[67\];
        inout LA_OENB\[68\];
        inout LA_OENB\[69\];
        inout LA_OENB\[6\];
        inout LA_OENB\[70\];
        inout LA_OENB\[71\];
        inout LA_OENB\[72\];
        inout LA_OENB\[73\];
        inout LA_OENB\[74\];
        inout LA_OENB\[75\];
        inout LA_OENB\[76\];
        inout LA_OENB\[77\];
        inout LA_OENB\[78\];
        inout LA_OENB\[79\];
        inout LA_OENB\[7\];
        inout LA_OENB\[80\];
        inout LA_OENB\[81\];
        inout LA_OENB\[82\];
        inout LA_OENB\[83\];
        inout LA_OENB\[84\];
        inout LA_OENB\[85\];
        inout LA_OENB\[86\];
        inout LA_OENB\[87\];
        inout LA_OENB\[88\];
        inout LA_OENB\[89\];
        inout LA_OENB\[8\];
        inout LA_OENB\[90\];
        inout LA_OENB\[91\];
        inout LA_OENB\[92\];
        inout LA_OENB\[93\];
        inout LA_OENB\[94\];
        inout LA_OENB\[95\];
        inout LA_OENB\[96\];
        inout LA_OENB\[97\];
        inout LA_OENB\[98\];
        inout LA_OENB\[99\];
        inout LA_OENB\[9\];
        inout USER_CLOCK2;
        inout USER_IRQ\[0\];
        inout USER_IRQ\[1\];
        inout USER_IRQ\[2\];
        inout VCCD1;
        inout VCCD2;
        inout VDDA1;
        inout VDDA2;
        inout VSSA1;
        inout VSSA2;
        inout VSSD1;
        inout VSSD2;
        inout WBS_ACK_O;
        inout WBS_ADR_I\[0\];
        inout WBS_ADR_I\[10\];
        inout WBS_ADR_I\[11\];
        inout WBS_ADR_I\[12\];
        inout WBS_ADR_I\[13\];
        inout WBS_ADR_I\[14\];
        inout WBS_ADR_I\[15\];
        inout WBS_ADR_I\[16\];
        inout WBS_ADR_I\[17\];
        inout WBS_ADR_I\[18\];
        inout WBS_ADR_I\[19\];
        inout WBS_ADR_I\[1\];
        inout WBS_ADR_I\[20\];
        inout WBS_ADR_I\[21\];
        inout WBS_ADR_I\[22\];
        inout WBS_ADR_I\[23\];
        inout WBS_ADR_I\[24\];
        inout WBS_ADR_I\[25\];
        inout WBS_ADR_I\[26\];
        inout WBS_ADR_I\[27\];
        inout WBS_ADR_I\[28\];
        inout WBS_ADR_I\[29\];
        inout WBS_ADR_I\[2\];
        inout WBS_ADR_I\[30\];
        inout WBS_ADR_I\[31\];
        inout WBS_ADR_I\[3\];
        inout WBS_ADR_I\[4\];
        inout WBS_ADR_I\[5\];
        inout WBS_ADR_I\[6\];
        inout WBS_ADR_I\[7\];
        inout WBS_ADR_I\[8\];
        inout WBS_ADR_I\[9\];
        inout WBS_CYC_I;
        inout WBS_DAT_I\[0\];
        inout WBS_DAT_I\[10\];
        inout WBS_DAT_I\[11\];
        inout WBS_DAT_I\[12\];
        inout WBS_DAT_I\[13\];
        inout WBS_DAT_I\[14\];
        inout WBS_DAT_I\[15\];
        inout WBS_DAT_I\[16\];
        inout WBS_DAT_I\[17\];
        inout WBS_DAT_I\[18\];
        inout WBS_DAT_I\[19\];
        inout WBS_DAT_I\[1\];
        inout WBS_DAT_I\[20\];
        inout WBS_DAT_I\[21\];
        inout WBS_DAT_I\[22\];
        inout WBS_DAT_I\[23\];
        inout WBS_DAT_I\[24\];
        inout WBS_DAT_I\[25\];
        inout WBS_DAT_I\[26\];
        inout WBS_DAT_I\[27\];
        inout WBS_DAT_I\[28\];
        inout WBS_DAT_I\[29\];
        inout WBS_DAT_I\[2\];
        inout WBS_DAT_I\[30\];
        inout WBS_DAT_I\[31\];
        inout WBS_DAT_I\[3\];
        inout WBS_DAT_I\[4\];
        inout WBS_DAT_I\[5\];
        inout WBS_DAT_I\[6\];
        inout WBS_DAT_I\[7\];
        inout WBS_DAT_I\[8\];
        inout WBS_DAT_I\[9\];
        inout WBS_DAT_O\[0\];
        inout WBS_DAT_O\[10\];
        inout WBS_DAT_O\[11\];
        inout WBS_DAT_O\[12\];
        inout WBS_DAT_O\[13\];
        inout WBS_DAT_O\[14\];
        inout WBS_DAT_O\[15\];
        inout WBS_DAT_O\[16\];
        inout WBS_DAT_O\[17\];
        inout WBS_DAT_O\[18\];
        inout WBS_DAT_O\[19\];
        inout WBS_DAT_O\[1\];
        inout WBS_DAT_O\[20\];
        inout WBS_DAT_O\[21\];
        inout WBS_DAT_O\[22\];
        inout WBS_DAT_O\[23\];
        inout WBS_DAT_O\[24\];
        inout WBS_DAT_O\[25\];
        inout WBS_DAT_O\[26\];
        inout WBS_DAT_O\[27\];
        inout WBS_DAT_O\[28\];
        inout WBS_DAT_O\[29\];
        inout WBS_DAT_O\[2\];
        inout WBS_DAT_O\[30\];
        inout WBS_DAT_O\[31\];
        inout WBS_DAT_O\[3\];
        inout WBS_DAT_O\[4\];
        inout WBS_DAT_O\[5\];
        inout WBS_DAT_O\[6\];
        inout WBS_DAT_O\[7\];
        inout WBS_DAT_O\[8\];
        inout WBS_DAT_O\[9\];
        inout WBS_SEL_I\[0\];
        inout WBS_SEL_I\[1\];
        inout WBS_SEL_I\[2\];
        inout WBS_SEL_I\[3\];
        inout WBS_STB_I;
        inout WBS_WE_I;
        inout WB_CLK_I;
        inout WB_RST_I;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // USER_ANALOG_PROJECT_WRAPPER


//--------EOF---------

`ifndef SKY130_HILAS_FGHUGEVARACTORCAPACITOR01
`define SKY130_HILAS_FGHUGEVARACTORCAPACITOR01

/**
 * sky130_hilas_FGHugeVaractorCapacitor01: one large varactor cap
 *
 * Verilog wrapper for sky130_hilas_FGHugeVaractorCapacitor01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGHugeVaractorCapacitor01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGHugeVaractorCapacitor01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_FGHUGEVARACTORCAPACITOR01


//--------EOF---------

`ifndef SKY130_HILAS_TRANS2MED
`define SKY130_HILAS_TRANS2MED

/**
 * sky130_hilas_Trans2med: None
 *
 * Verilog wrapper for sky130_hilas_Trans2med.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_Trans2med (
    GATE1N,
    GATE2P,
    GATE1P,
    SOURCE1P,
    SOURCE2P,
    SOURCE2N,
    SOURCE1N,
    DRAIN1N,
    DRAIN1P,
    DRAIN2P,
    WELL,
    VGND,
    VNB,
    VPB
);
        inout GATE1N;
        inout GATE2P;
        inout GATE1P;
        inout SOURCE1P;
        inout SOURCE2P;
        inout SOURCE2N;
        inout SOURCE1N;
        inout DRAIN1N;
        inout DRAIN1P;
        inout DRAIN2P;
        inout WELL;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_Trans2med (
    GATE1N,
    GATE2P,
    GATE1P,
    SOURCE1P,
    SOURCE2P,
    SOURCE2N,
    SOURCE1N,
    DRAIN1N,
    DRAIN1P,
    DRAIN2P,
    WELL
);
        inout GATE1N;
        inout GATE2P;
        inout GATE1P;
        inout SOURCE1P;
        inout SOURCE2P;
        inout SOURCE2N;
        inout SOURCE1N;
        inout DRAIN1N;
        inout DRAIN1P;
        inout DRAIN2P;
        inout WELL;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TRANS2MED


//--------EOF---------

`ifndef SKY130_HILAS_NFET03A
`define SKY130_HILAS_NFET03A

/**
 * sky130_hilas_nFET03a: None
 *
 * Verilog wrapper for sky130_hilas_nFET03a.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFET03a (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFET03a (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NFET03A


//--------EOF---------

`ifndef SKY130_HILAS_FGVARACTORCAPACITOR
`define SKY130_HILAS_FGVARACTORCAPACITOR

/**
 * sky130_hilas_FGVaractorCapacitor: varactor cap for floating-gate charge storage
 *
 * Verilog wrapper for sky130_hilas_FGVaractorCapacitor.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGVaractorCapacitor (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGVaractorCapacitor (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_FGVARACTORCAPACITOR


//--------EOF---------

`ifndef SKY130_HILAS_SWC4X2CELL
`define SKY130_HILAS_SWC4X2CELL

/**
 * sky130_hilas_swc4x2cell: 4x2 array of FG switch cell, Varactor capacitor cell
 *
 * Verilog wrapper for sky130_hilas_swc4x2cell.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x2cell (
    COL1,
    COL2,
    DRAIN1,
    DRAIN2,
    DRAIN3,
    DRAIN4,
    GATE1,
    GATE2,
    GATESELECT1,
    GATESELECT2,
    ROW1,
    ROW2,
    ROW3,
    ROW4,
    VINJ,
    VTUN,
    VGND,
    VNB,
    VPB
);
        inout COL1;
        inout COL2;
        inout DRAIN1;
        inout DRAIN2;
        inout DRAIN3;
        inout DRAIN4;
        inout GATE1;
        inout GATE2;
        inout GATESELECT1;
        inout GATESELECT2;
        inout ROW1;
        inout ROW2;
        inout ROW3;
        inout ROW4;
        inout VINJ;
        inout VTUN;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x2cell (
    COL1,
    COL2,
    DRAIN1,
    DRAIN2,
    DRAIN3,
    DRAIN4,
    GATE1,
    GATE2,
    GATESELECT1,
    GATESELECT2,
    ROW1,
    ROW2,
    ROW3,
    ROW4,
    VINJ,
    VTUN
);
        inout COL1;
        inout COL2;
        inout DRAIN1;
        inout DRAIN2;
        inout DRAIN3;
        inout DRAIN4;
        inout GATE1;
        inout GATE2;
        inout GATESELECT1;
        inout GATESELECT2;
        inout ROW1;
        inout ROW2;
        inout ROW3;
        inout ROW4;
        inout VINJ;
        inout VTUN;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_SWC4X2CELL


//--------EOF---------

`ifndef SKY130_HILAS_ALL
`define SKY130_HILAS_ALL

/**
 * sky130_hilas_all: A design which contains all cells (?)
 *
 * Verilog wrapper for sky130_hilas_all.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_all (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_all (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_ALL


//--------EOF---------

`ifndef SKY130_HILAS_HORIZTRANSCELL01A
`define SKY130_HILAS_HORIZTRANSCELL01A

/**
 * sky130_hilas_horizTransCell01a: 
 *
 * Verilog wrapper for sky130_hilas_horizTransCell01a.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_horizTransCell01a (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_horizTransCell01a (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_HORIZTRANSCELL01A


//--------EOF---------

`ifndef SKY130_HILAS_DOUBLETGATE01
`define SKY130_HILAS_DOUBLETGATE01

/**
 * sky130_hilas_DoubleTGate01: 2x1 array of transmission gates
 *
 * Verilog wrapper for sky130_hilas_DoubleTGate01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DoubleTGate01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DoubleTGate01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DOUBLETGATE01


//--------EOF---------

`ifndef SKY130_HILAS_TUNCAP01
`define SKY130_HILAS_TUNCAP01

/**
 * sky130_hilas_TunCap01: None
 *
 * Verilog wrapper for sky130_hilas_TunCap01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TunCap01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TunCap01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TUNCAP01


//--------EOF---------

`ifndef SKY130_HILAS_PFETDEVICE01A
`define SKY130_HILAS_PFETDEVICE01A

/**
 * sky130_hilas_pFETdevice01a: pFET transistor used in DAC block
 *
 * Verilog wrapper for sky130_hilas_pFETdevice01a.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01a (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01a (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETDEVICE01A


//--------EOF---------

`ifndef SKY130_HILAS_TUNVARACTORCAPCITOR
`define SKY130_HILAS_TUNVARACTORCAPCITOR

/**
 * sky130_hilas_TunVaractorCapcitor: Tunneling capacitor using a standard varactor capacitor
 *
 * Verilog wrapper for sky130_hilas_TunVaractorCapcitor.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TunVaractorCapcitor (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TunVaractorCapcitor (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TUNVARACTORCAPCITOR


//--------EOF---------

`ifndef SKY130_HILAS_DECOUPVINJ01
`define SKY130_HILAS_DECOUPVINJ01

/**
 * sky130_hilas_DecoupVinj01: 
 *
 * Verilog wrapper for sky130_hilas_DecoupVinj01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DecoupVinj01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DecoupVinj01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DECOUPVINJ01


//--------EOF---------

`ifndef SKY130_HILAS_TACOREBLOCK2
`define SKY130_HILAS_TACOREBLOCK2

/**
 * sky130_hilas_TACoreBlock2: None
 *
 * Verilog wrapper for sky130_hilas_TACoreBlock2.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TACoreBlock2 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TACoreBlock2 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TACOREBLOCK2


//--------EOF---------

`ifndef SKY130_HILAS_PFETDEVICE01W1
`define SKY130_HILAS_PFETDEVICE01W1

/**
 * sky130_hilas_pFETdevice01w1: 
 *
 * Verilog wrapper for sky130_hilas_pFETdevice01w1.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01w1 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01w1 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETDEVICE01W1


//--------EOF---------

`ifndef SKY130_HILAS_TOPPROTECTION
`define SKY130_HILAS_TOPPROTECTION

/**
 * sky130_hilas_TopProtection: 
 *
 * Verilog wrapper for sky130_hilas_TopProtection.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TopProtection (
    ANALOG00,
    ANALOG01,
    ANALOG02,
    ANALOG03,
    ANALOG04,
    ANALOG05,
    ANALOG06,
    ANALOG07,
    ANALOG08,
    ANALOG09,
    ANALOG10,
    PIN1,
    PIN2,
    PIN3,
    PIN4,
    PIN5,
    PIN6,
    PIN7,
    PIN8,
    PIN9,
    PIN10,
    VTUN,
    VNB,
    VPB
);
        inout ANALOG00;
        inout ANALOG01;
        inout ANALOG02;
        inout ANALOG03;
        inout ANALOG04;
        inout ANALOG05;
        inout ANALOG06;
        inout ANALOG07;
        inout ANALOG08;
        inout ANALOG09;
        inout ANALOG10;
        inout PIN1;
        inout PIN2;
        inout PIN3;
        inout PIN4;
        inout PIN5;
        inout PIN6;
        inout PIN7;
        inout PIN8;
        inout PIN9;
        inout PIN10;
        inout VTUN;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TopProtection (
    ANALOG00,
    ANALOG01,
    ANALOG02,
    ANALOG03,
    ANALOG04,
    ANALOG05,
    ANALOG06,
    ANALOG07,
    ANALOG08,
    ANALOG09,
    ANALOG10,
    PIN1,
    PIN2,
    PIN3,
    PIN4,
    PIN5,
    PIN6,
    PIN7,
    PIN8,
    PIN9,
    PIN10,
    VTUN
);
        inout ANALOG00;
        inout ANALOG01;
        inout ANALOG02;
        inout ANALOG03;
        inout ANALOG04;
        inout ANALOG05;
        inout ANALOG06;
        inout ANALOG07;
        inout ANALOG08;
        inout ANALOG09;
        inout ANALOG10;
        inout PIN1;
        inout PIN2;
        inout PIN3;
        inout PIN4;
        inout PIN5;
        inout PIN6;
        inout PIN7;
        inout PIN8;
        inout PIN9;
        inout PIN10;
        inout VTUN;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TOPPROTECTION


//--------EOF---------

`ifndef SKY130_HILAS_WTASINGLESTAGE01
`define SKY130_HILAS_WTASINGLESTAGE01

/**
 * sky130_hilas_WTAsinglestage01: None
 *
 * Verilog wrapper for sky130_hilas_WTAsinglestage01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_WTAsinglestage01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_WTAsinglestage01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_WTASINGLESTAGE01


//--------EOF---------

`ifndef SKY130_HILAS_PFETLARGEPART1
`define SKY130_HILAS_PFETLARGEPART1

/**
 * sky130_hilas_pFETLargePart1: Part of the W/L=100 pFET transistor
 *
 * Verilog wrapper for sky130_hilas_pFETLargePart1.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETLargePart1 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETLargePart1 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETLARGEPART1


//--------EOF---------

`ifndef SKY130_HILAS_TGATESINGLE01
`define SKY130_HILAS_TGATESINGLE01

/**
 * sky130_hilas_TgateSingle01: None
 *
 * Verilog wrapper for sky130_hilas_TgateSingle01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateSingle01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateSingle01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TGATESINGLE01


//--------EOF---------

`ifndef SKY130_HILAS_PFETDEVICE01C
`define SKY130_HILAS_PFETDEVICE01C

/**
 * sky130_hilas_pFETdevice01c: pFET transistor used in DAC block
 *
 * Verilog wrapper for sky130_hilas_pFETdevice01c.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01c (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01c (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETDEVICE01C


//--------EOF---------

`ifndef SKY130_HILAS_POLYRESISTORGND
`define SKY130_HILAS_POLYRESISTORGND

/**
 * sky130_hilas_polyresistorGND: protective current-limiting resistor to ground
 *
 * Verilog wrapper for sky130_hilas_polyresistorGND.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_polyresistorGND (
    INPUT,
    OUTPUT,
    VGND,
    VNB,
    VPB
);
        inout INPUT;
        inout OUTPUT;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_polyresistorGND (
    INPUT,
    OUTPUT
);
        inout INPUT;
        inout OUTPUT;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_POLYRESISTORGND


//--------EOF---------

`ifndef SKY130_HILAS_INVERT01
`define SKY130_HILAS_INVERT01

/**
 * sky130_hilas_invert01: None
 *
 * Verilog wrapper for sky130_hilas_invert01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_invert01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_invert01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_INVERT01


//--------EOF---------

`ifndef SKY130_HILAS_TGATEDOUBLE01
`define SKY130_HILAS_TGATEDOUBLE01

/**
 * sky130_hilas_TgateDouble01: None
 *
 * Verilog wrapper for sky130_hilas_TgateDouble01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateDouble01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateDouble01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TGATEDOUBLE01


//--------EOF---------

`ifndef SKY130_HILAS_SWC4X2CELLOVERLAP
`define SKY130_HILAS_SWC4X2CELLOVERLAP

/**
 * sky130_hilas_swc4x2cellOverlap: Core switch cell, built with overlap capacitor
 *
 * Verilog wrapper for sky130_hilas_swc4x2cellOverlap.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x2cellOverlap (
    VERT1,
    HORIZ1,
    DRAIN1,
    HORIZ2,
    DRAIN2,
    DRAIN3,
    HORIZ3,
    HORIZ4,
    DRAIN4,
    VINJ,
    GATESELECT1,
    VERT2,
    GATESELECT2,
    DRAIN,
    GATE2,
    GATE1,
    VTUN,
    VNB,
    VPB
);
        inout VERT1;
        inout HORIZ1;
        inout DRAIN1;
        inout HORIZ2;
        inout DRAIN2;
        inout DRAIN3;
        inout HORIZ3;
        inout HORIZ4;
        inout DRAIN4;
        inout VINJ;
        inout GATESELECT1;
        inout VERT2;
        inout GATESELECT2;
        inout DRAIN;
        inout GATE2;
        inout GATE1;
        inout VTUN;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x2cellOverlap (
    VERT1,
    HORIZ1,
    DRAIN1,
    HORIZ2,
    DRAIN2,
    DRAIN3,
    HORIZ3,
    HORIZ4,
    DRAIN4,
    VINJ,
    GATESELECT1,
    VERT2,
    GATESELECT2,
    DRAIN,
    GATE2,
    GATE1,
    VTUN
);
        inout VERT1;
        inout HORIZ1;
        inout DRAIN1;
        inout HORIZ2;
        inout DRAIN2;
        inout DRAIN3;
        inout HORIZ3;
        inout HORIZ4;
        inout DRAIN4;
        inout VINJ;
        inout GATESELECT1;
        inout VERT2;
        inout GATESELECT2;
        inout DRAIN;
        inout GATE2;
        inout GATE1;
        inout VTUN;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_SWC4X2CELLOVERLAP


//--------EOF---------

`ifndef SKY130_HILAS_OVERLAPCAP02
`define SKY130_HILAS_OVERLAPCAP02

/**
 * sky130_hilas_overlapCap02: overlap capacitor based capacitor)
 *
 * Verilog wrapper for sky130_hilas_overlapCap02.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_overlapCap02 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_overlapCap02 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_OVERLAPCAP02


//--------EOF---------

`ifndef SKY130_HILAS_DAC6TRANSISTORSTACK01A
`define SKY130_HILAS_DAC6TRANSISTORSTACK01A

/**
 * sky130_hilas_DAC6TransistorStack01a: None
 *
 * Verilog wrapper for sky130_hilas_DAC6TransistorStack01a.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6TransistorStack01a (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6TransistorStack01a (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DAC6TRANSISTORSTACK01A


//--------EOF---------

`ifndef SKY130_HILAS_FGBIAS2X1CELL
`define SKY130_HILAS_FGBIAS2X1CELL

/**
 * sky130_hilas_FGBias2x1cell: None
 *
 * Verilog wrapper for sky130_hilas_FGBias2x1cell.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGBias2x1cell (
    DRAIN1,
    DRAIN4,
    GATECOL,
    GATE_CONTROL,
    OUTPUT1,
    OUTPUT2,
    VINJ,
    VTUN,
    VGND,
    VNB,
    VPB
);
        inout DRAIN1;
        inout DRAIN4;
        inout GATECOL;
        inout GATE_CONTROL;
        inout OUTPUT1;
        inout OUTPUT2;
        inout VINJ;
        inout VTUN;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGBias2x1cell (
    DRAIN1,
    DRAIN4,
    GATECOL,
    GATE_CONTROL,
    OUTPUT1,
    OUTPUT2,
    VINJ,
    VTUN
);
        inout DRAIN1;
        inout DRAIN4;
        inout GATECOL;
        inout GATE_CONTROL;
        inout OUTPUT1;
        inout OUTPUT2;
        inout VINJ;
        inout VTUN;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_FGBIAS2X1CELL


//--------EOF---------

`ifndef SKY130_HILAS_OVERLAPCAP02A
`define SKY130_HILAS_OVERLAPCAP02A

/**
 * sky130_hilas_overlapCap02a: overlap capacitor based capacitor
 *
 * Verilog wrapper for sky130_hilas_overlapCap02a.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_overlapCap02a (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_overlapCap02a (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_OVERLAPCAP02A


//--------EOF---------

`ifndef SKY130_HILAS_FGVARACTORCAPACITOR02
`define SKY130_HILAS_FGVARACTORCAPACITOR02

/**
 * sky130_hilas_FGVaractorCapacitor02: variant 2, varactor cap for floating-gate charge storage
 *
 * Verilog wrapper for sky130_hilas_FGVaractorCapacitor02.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGVaractorCapacitor02 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGVaractorCapacitor02 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_FGVARACTORCAPACITOR02


//--------EOF---------

`ifndef SKY130_HILAS_DRAINSELECT01
`define SKY130_HILAS_DRAINSELECT01

/**
 * sky130_hilas_drainSelect01: multiplexor for drain selection for 4 drain lines, pitch matched
 *
 * Verilog wrapper for sky130_hilas_drainSelect01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_drainSelect01 (
    DRAIN3,
    VINJ,
    DRAIN_MUX,
    SELECT2,
    SELECT1,
    SELECT3,
    SELECT4,
    VGND,
    VNB,
    VPB
);
        inout DRAIN3;
        inout VINJ;
        inout DRAIN_MUX;
        inout SELECT2;
        inout SELECT1;
        inout SELECT3;
        inout SELECT4;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_drainSelect01 (
    DRAIN3,
    VINJ,
    DRAIN_MUX,
    SELECT2,
    SELECT1,
    SELECT3,
    SELECT4
);
        inout DRAIN3;
        inout VINJ;
        inout DRAIN_MUX;
        inout SELECT2;
        inout SELECT1;
        inout SELECT3;
        inout SELECT4;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DRAINSELECT01


//--------EOF---------

`ifndef SKY130_HILAS_HORIZTRANSCELL01
`define SKY130_HILAS_HORIZTRANSCELL01

/**
 * sky130_hilas_horizTransCell01: None
 *
 * Verilog wrapper for sky130_hilas_horizTransCell01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_horizTransCell01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_horizTransCell01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_HORIZTRANSCELL01


//--------EOF---------

`ifndef M12M3
`define M12M3

/**
 * m12m3: 
 *
 * Verilog wrapper for m12m3.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module m12m3 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module m12m3 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // M12M3


//--------EOF---------

`ifndef SKY130_HILAS_DAC5BIT01
`define SKY130_HILAS_DAC5BIT01

/**
 * sky130_hilas_DAC5bit01: 5-bit digital-to-analog converter (under 6.05um at the moment; thinking through expansion to 6bit and 7bit, and they would use this cell
 *
 * Verilog wrapper for sky130_hilas_DAC5bit01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC5bit01 (
    A0,
    A1,
    A2,
    A3,
    A4,
    OUT,
    VPWR,
    VNB,
    VPB
);
        inout A0;
        inout A1;
        inout A2;
        inout A3;
        inout A4;
        inout OUT;
        inout VPWR;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC5bit01 (
    A0,
    A1,
    A2,
    A3,
    A4,
    OUT
);
        inout A0;
        inout A1;
        inout A2;
        inout A3;
        inout A4;
        inout OUT;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DAC5BIT01


//--------EOF---------

`ifndef SKY130_HILAS_DAC6BIT01
`define SKY130_HILAS_DAC6BIT01

/**
 * sky130_hilas_DAC6bit01: None
 *
 * Verilog wrapper for sky130_hilas_DAC6bit01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6bit01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6bit01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DAC6BIT01


//--------EOF---------

`ifndef SKY130_HILAS_PFETDEVICE01D
`define SKY130_HILAS_PFETDEVICE01D

/**
 * sky130_hilas_pFETdevice01d: pFET transistor used in DAC block
 *
 * Verilog wrapper for sky130_hilas_pFETdevice01d.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01d (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01d (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETDEVICE01D


//--------EOF---------

`ifndef SKY130_HILAS_NFETLARGEPART1
`define SKY130_HILAS_NFETLARGEPART1

/**
 * sky130_hilas_nFETLargePart1: None
 *
 * Verilog wrapper for sky130_hilas_nFETLargePart1.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETLargePart1 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETLargePart1 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NFETLARGEPART1


//--------EOF---------

`ifndef SKY130_HILAS_POLY2LI
`define SKY130_HILAS_POLY2LI

/**
 * sky130_hilas_poly2li: polysilicon layer to li contact
 *
 * Verilog wrapper for sky130_hilas_poly2li.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_poly2li (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_poly2li (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_POLY2LI


//--------EOF---------

`ifndef SKY130_HILAS_HORIZPCELL01
`define SKY130_HILAS_HORIZPCELL01

/**
 * sky130_hilas_horizPcell01: None
 *
 * Verilog wrapper for sky130_hilas_horizPcell01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_horizPcell01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_horizPcell01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_HORIZPCELL01


//--------EOF---------

`ifndef SKY130_HILAS_DECOUP_CAP_00
`define SKY130_HILAS_DECOUP_CAP_00

/**
 * sky130_hilas_decoup_cap_00: decoupling cap (intended as fill)
 *
 * Verilog wrapper for sky130_hilas_decoup_cap_00.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_decoup_cap_00 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_decoup_cap_00 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DECOUP_CAP_00


//--------EOF---------

`ifndef SKY130_HILAS_FGVARACTORTUNNELCAP01
`define SKY130_HILAS_FGVARACTORTUNNELCAP01

/**
 * sky130_hilas_FGVaractorTunnelCap01: Tunneling cpacitor using a standard varactor capacitor
 *
 * Verilog wrapper for sky130_hilas_FGVaractorTunnelCap01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGVaractorTunnelCap01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_FGVaractorTunnelCap01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_FGVARACTORTUNNELCAP01


//--------EOF---------

`ifndef SKY130_HILAS_CAPACITORSIZE04
`define SKY130_HILAS_CAPACITORSIZE04

/**
 * sky130_hilas_capacitorSize04: large cap
 *
 * Verilog wrapper for sky130_hilas_capacitorSize04.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorSize04 (
    CAP1TERM02,
    CAP2TERM02,
    CAP2TERM01,
    CAP1TERM01,
    VNB,
    VPB
);
        inout CAP1TERM02;
        inout CAP2TERM02;
        inout CAP2TERM01;
        inout CAP1TERM01;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorSize04 (
    CAP1TERM02,
    CAP2TERM02,
    CAP2TERM01,
    CAP1TERM01
);
        inout CAP1TERM02;
        inout CAP2TERM02;
        inout CAP2TERM01;
        inout CAP1TERM01;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CAPACITORSIZE04


//--------EOF---------

`ifndef SKY130_HILAS_LI2M1
`define SKY130_HILAS_LI2M1

/**
 * sky130_hilas_li2m1: local interconnect to m1 contact
 *
 * Verilog wrapper for sky130_hilas_li2m1.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_li2m1 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_li2m1 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_LI2M1


//--------EOF---------

`ifndef SKY130_HILAS_RIGHTPROTECTION
`define SKY130_HILAS_RIGHTPROTECTION

/**
 * sky130_hilas_RightProtection: 
 *
 * Verilog wrapper for sky130_hilas_RightProtection.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_RightProtection (
    IO7,
    IO8,
    IO9,
    IO10,
    IO11,
    IO13,
    IO12,
    PIN1,
    PIN2,
    PIN3,
    PIN4,
    PIN5,
    PIN6,
    PIN7,
    VNB,
    VPB
);
        inout IO7;
        inout IO8;
        inout IO9;
        inout IO10;
        inout IO11;
        inout IO13;
        inout IO12;
        inout PIN1;
        inout PIN2;
        inout PIN3;
        inout PIN4;
        inout PIN5;
        inout PIN6;
        inout PIN7;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_RightProtection (
    IO7,
    IO8,
    IO9,
    IO10,
    IO11,
    IO13,
    IO12,
    PIN1,
    PIN2,
    PIN3,
    PIN4,
    PIN5,
    PIN6,
    PIN7
);
        inout IO7;
        inout IO8;
        inout IO9;
        inout IO10;
        inout IO11;
        inout IO13;
        inout IO12;
        inout PIN1;
        inout PIN2;
        inout PIN3;
        inout PIN4;
        inout PIN5;
        inout PIN6;
        inout PIN7;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_RIGHTPROTECTION


//--------EOF---------

`ifndef SKY130_HILAS_CAPACITORARRAY01
`define SKY130_HILAS_CAPACITORARRAY01

/**
 * sky130_hilas_capacitorArray01: selectable capacitor array
 *
 * Verilog wrapper for sky130_hilas_capacitorArray01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorArray01 (
    CAPTERM2,
    CAPTERM1,
    VINJ,
    GATESELECT,
    VTUN,
    GATE,
    DRAIN2,
    DRAIN1,
    DRAIN4,
    DRAIN3,
    VGND,
    VNB,
    VPB
);
        inout CAPTERM2;
        inout CAPTERM1;
        inout VINJ;
        inout GATESELECT;
        inout VTUN;
        inout GATE;
        inout DRAIN2;
        inout DRAIN1;
        inout DRAIN4;
        inout DRAIN3;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorArray01 (
    CAPTERM2,
    CAPTERM1,
    VINJ,
    GATESELECT,
    VTUN,
    GATE,
    DRAIN2,
    DRAIN1,
    DRAIN4,
    DRAIN3
);
        inout CAPTERM2;
        inout CAPTERM1;
        inout VINJ;
        inout GATESELECT;
        inout VTUN;
        inout GATE;
        inout DRAIN2;
        inout DRAIN1;
        inout DRAIN4;
        inout DRAIN3;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CAPACITORARRAY01


//--------EOF---------

`ifndef SKY130_HILAS_M12M2
`define SKY130_HILAS_M12M2

/**
 * sky130_hilas_m12m2: m1 to m2 contact
 *
 * Verilog wrapper for sky130_hilas_m12m2.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_m12m2 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_m12m2 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_M12M2


//--------EOF---------

`ifndef SKY130_HILAS_PFETMED
`define SKY130_HILAS_PFETMED

/**
 * sky130_hilas_pFETmed: Medium-sized (W/L=10) pFET transistor
 *
 * Verilog wrapper for sky130_hilas_pFETmed.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETmed (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETmed (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETMED


//--------EOF---------

`ifndef SKY130_HILAS_SWC4X1CELLOVERLAP2
`define SKY130_HILAS_SWC4X1CELLOVERLAP2

/**
 * sky130_hilas_swc4x1cellOverlap2: 4x1 analog mux with overlap
 *
 * Verilog wrapper for sky130_hilas_swc4x1cellOverlap2.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x1cellOverlap2 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x1cellOverlap2 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_SWC4X1CELLOVERLAP2


//--------EOF---------

`ifndef SKY130_HILAS_SWC2X2VARACTOR
`define SKY130_HILAS_SWC2X2VARACTOR

/**
 * sky130_hilas_swc2x2varactor: ??  Is this part of the library?
 *
 * Verilog wrapper for sky130_hilas_swc2x2varactor.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc2x2varactor (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc2x2varactor (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_SWC2X2VARACTOR


//--------EOF---------

`ifndef SKY130_HILAS_OVERLAPCAP01
`define SKY130_HILAS_OVERLAPCAP01

/**
 * sky130_hilas_overlapCap01: overlap capacitor based capacitor
 *
 * Verilog wrapper for sky130_hilas_overlapCap01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_overlapCap01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_overlapCap01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_OVERLAPCAP01


//--------EOF---------

`ifndef SKY130_HILAS_DAC6TRANSISTORSTACK01
`define SKY130_HILAS_DAC6TRANSISTORSTACK01

/**
 * sky130_hilas_DAC6TransistorStack01: None
 *
 * Verilog wrapper for sky130_hilas_DAC6TransistorStack01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6TransistorStack01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DAC6TransistorStack01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DAC6TRANSISTORSTACK01


//--------EOF---------

`ifndef SKY130_HILAS_PTRANSISTORPAIR
`define SKY130_HILAS_PTRANSISTORPAIR

/**
 * sky130_hilas_pTransistorPair: None
 *
 * Verilog wrapper for sky130_hilas_pTransistorPair.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pTransistorPair (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pTransistorPair (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PTRANSISTORPAIR


//--------EOF---------

`ifndef SKY130_HILAS_DECOUP_CAP_01
`define SKY130_HILAS_DECOUP_CAP_01

/**
 * sky130_hilas_decoup_cap_01: decoupling cap (intended as fill), variant
 *
 * Verilog wrapper for sky130_hilas_decoup_cap_01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_decoup_cap_01 (
    VPWR,
    VNB,
    VPB
);
        inout VPWR;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_decoup_cap_01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DECOUP_CAP_01


//--------EOF---------

`ifndef SKY130_HILAS_TA2SIGNALBIASCELL
`define SKY130_HILAS_TA2SIGNALBIASCELL

/**
 * sky130_hilas_TA2SignalBiasCell: None
 *
 * Verilog wrapper for sky130_hilas_TA2SignalBiasCell.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TA2SignalBiasCell (
    VOUT_AMP2,
    VOUT_AMP1,
    VIN22,
    VIN21,
    VIN11,
    VIN12,
    VBIAS2,
    VBIAS1,
    VGND,
    VPWR,
    VNB,
    VPB
);
        inout VOUT_AMP2;
        inout VOUT_AMP1;
        inout VIN22;
        inout VIN21;
        inout VIN11;
        inout VIN12;
        inout VBIAS2;
        inout VBIAS1;
        inout VGND;
        inout VPWR;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TA2SignalBiasCell (
    VOUT_AMP2,
    VOUT_AMP1,
    VIN22,
    VIN21,
    VIN11,
    VIN12,
    VBIAS2,
    VBIAS1
);
        inout VOUT_AMP2;
        inout VOUT_AMP1;
        inout VIN22;
        inout VIN21;
        inout VIN11;
        inout VIN12;
        inout VBIAS2;
        inout VBIAS1;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TA2SIGNALBIASCELL


//--------EOF---------

`ifndef SKY130_HILAS_TGATESINGLE01PART1
`define SKY130_HILAS_TGATESINGLE01PART1

/**
 * sky130_hilas_TgateSingle01Part1: None
 *
 * Verilog wrapper for sky130_hilas_TgateSingle01Part1.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateSingle01Part1 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TgateSingle01Part1 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TGATESINGLE01PART1


//--------EOF---------

`ifndef SKY130_HILAS_TGATE4SINGLE01
`define SKY130_HILAS_TGATE4SINGLE01

/**
 * sky130_hilas_Tgate4Single01: 4 single-throw transmission gates
 *
 * Verilog wrapper for sky130_hilas_Tgate4Single01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_Tgate4Single01 (
    INPUT1_2,
    SELECT2,
    OUTPUT2,
    OUTPUT4,
    OUTPUT3,
    OUTPUT1,
    INPUT1_4,
    SELECT4,
    SELECT3,
    INPUT1_3,
    SELECT1,
    INPUT1_1,
    VPWR,
    VGND,
    VNB,
    VPB
);
        inout INPUT1_2;
        inout SELECT2;
        inout OUTPUT2;
        inout OUTPUT4;
        inout OUTPUT3;
        inout OUTPUT1;
        inout INPUT1_4;
        inout SELECT4;
        inout SELECT3;
        inout INPUT1_3;
        inout SELECT1;
        inout INPUT1_1;
        inout VPWR;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_Tgate4Single01 (
    INPUT1_2,
    SELECT2,
    OUTPUT2,
    OUTPUT4,
    OUTPUT3,
    OUTPUT1,
    INPUT1_4,
    SELECT4,
    SELECT3,
    INPUT1_3,
    SELECT1,
    INPUT1_1
);
        inout INPUT1_2;
        inout SELECT2;
        inout OUTPUT2;
        inout OUTPUT4;
        inout OUTPUT3;
        inout OUTPUT1;
        inout INPUT1_4;
        inout SELECT4;
        inout SELECT3;
        inout INPUT1_3;
        inout SELECT1;
        inout INPUT1_1;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TGATE4SINGLE01


//--------EOF---------

`ifndef SKY130_HILAS_WTA4STAGE01
`define SKY130_HILAS_WTA4STAGE01

/**
 * sky130_hilas_WTA4stage01: single-element of WTA circuit
 *
 * Verilog wrapper for sky130_hilas_WTA4stage01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_WTA4stage01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_WTA4stage01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_WTA4STAGE01


//--------EOF---------

`ifndef SKY130_HILAS_DUALTACORE01
`define SKY130_HILAS_DUALTACORE01

/**
 * sky130_hilas_DualTACore01: None
 *
 * Verilog wrapper for sky130_hilas_DualTACore01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DualTACore01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_DualTACore01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_DUALTACORE01


//--------EOF---------

`ifndef SKY130_HILAS_VINJDECODE2TO4
`define SKY130_HILAS_VINJDECODE2TO4

/**
 * sky130_hilas_VinjDecode2to4: a 2-to-4 decoder capable of handling VINJ voltage
 *
 * Verilog wrapper for sky130_hilas_VinjDecode2to4.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_VinjDecode2to4 (
    OUTPUT00,
    OUTPUT01,
    OUTPUT10,
    OUTPUT11,
    VINJ,
    IN2,
    IN1,
    ENABLE,
    VGND,
    VNB,
    VPB
);
        inout OUTPUT00;
        inout OUTPUT01;
        inout OUTPUT10;
        inout OUTPUT11;
        inout VINJ;
        inout IN2;
        inout IN1;
        inout ENABLE;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_VinjDecode2to4 (
    OUTPUT00,
    OUTPUT01,
    OUTPUT10,
    OUTPUT11,
    VINJ,
    IN2,
    IN1,
    ENABLE
);
        inout OUTPUT00;
        inout OUTPUT01;
        inout OUTPUT10;
        inout OUTPUT11;
        inout VINJ;
        inout IN2;
        inout IN1;
        inout ENABLE;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_VINJDECODE2TO4


//--------EOF---------

`ifndef SKY130_HILAS_MCAP2M4
`define SKY130_HILAS_MCAP2M4

/**
 * sky130_hilas_mcap2m4: metal capacitor layer contact to m4
 *
 * Verilog wrapper for sky130_hilas_mcap2m4.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_mcap2m4 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_mcap2m4 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_MCAP2M4


//--------EOF---------

`ifndef SKY130_HILAS_TA2CELL_1FG
`define SKY130_HILAS_TA2CELL_1FG

/**
 * sky130_hilas_TA2Cell_1FG: Two transimpedance amps with one (of two) amplifiers using floating-gate
  inputs. FG amplifier with wide linear range.
 *
 * Verilog wrapper for sky130_hilas_TA2Cell_1FG.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TA2Cell_1FG (
    VIN12,
    VIN11,
    VIN21,
    VIN22,
    VINJ,
    OUTPUT1,
    OUTPUT2,
    DRAIN1,
    DRAIN2,
    COLSEL2,
    GATE2,
    GATE1,
    COLSEL1,
    VTUN,
    VPWR,
    VGND,
    VNB,
    VPB
);
        inout VIN12;
        inout VIN11;
        inout VIN21;
        inout VIN22;
        inout VINJ;
        inout OUTPUT1;
        inout OUTPUT2;
        inout DRAIN1;
        inout DRAIN2;
        inout COLSEL2;
        inout GATE2;
        inout GATE1;
        inout COLSEL1;
        inout VTUN;
        inout VPWR;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TA2Cell_1FG (
    VIN12,
    VIN11,
    VIN21,
    VIN22,
    VINJ,
    OUTPUT1,
    OUTPUT2,
    DRAIN1,
    DRAIN2,
    COLSEL2,
    GATE2,
    GATE1,
    COLSEL1,
    VTUN
);
        inout VIN12;
        inout VIN11;
        inout VIN21;
        inout VIN22;
        inout VINJ;
        inout OUTPUT1;
        inout OUTPUT2;
        inout DRAIN1;
        inout DRAIN2;
        inout COLSEL2;
        inout GATE2;
        inout GATE1;
        inout COLSEL1;
        inout VTUN;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TA2CELL_1FG


//--------EOF---------

`ifndef SKY130_HILAS_SWC4X1CELLOVERLAP
`define SKY130_HILAS_SWC4X1CELLOVERLAP

/**
 * sky130_hilas_swc4x1cellOverlap: 4x1 array of FG switch cell using overlap capacitors
 *
 * Verilog wrapper for sky130_hilas_swc4x1cellOverlap.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x1cellOverlap (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_swc4x1cellOverlap (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_SWC4X1CELLOVERLAP


//--------EOF---------

`ifndef SKY130_HILAS_PFETDEVICE01BA
`define SKY130_HILAS_PFETDEVICE01BA

/**
 * sky130_hilas_pFETdevice01ba: pFET transistor used in DAC block
 *
 * Verilog wrapper for sky130_hilas_pFETdevice01ba.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01ba (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETdevice01ba (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETDEVICE01BA


//--------EOF---------

`ifndef SKY130_HILAS_NFETMED
`define SKY130_HILAS_NFETMED

/**
 * sky130_hilas_nFETmed: None
 *
 * Verilog wrapper for sky130_hilas_nFETmed.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETmed (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETmed (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NFETMED


//--------EOF---------

`ifndef SKY130_HILAS_PTRANSISTORVERT01
`define SKY130_HILAS_PTRANSISTORVERT01

/**
 * sky130_hilas_pTransistorVert01: None
 *
 * Verilog wrapper for sky130_hilas_pTransistorVert01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pTransistorVert01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pTransistorVert01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PTRANSISTORVERT01


//--------EOF---------

`ifndef SKY130_HILAS_WELLCONTACT
`define SKY130_HILAS_WELLCONTACT

/**
 * sky130_hilas_wellContact: contact to a well block, typically used for contacting tunneling junctions in a well.
 *
 * Verilog wrapper for sky130_hilas_wellContact.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_wellContact (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_wellContact (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_WELLCONTACT


//--------EOF---------

`ifndef SKY130_HILAS_CAPACITORSIZE02
`define SKY130_HILAS_CAPACITORSIZE02

/**
 * sky130_hilas_capacitorSize02: mid-small cap
 *
 * Verilog wrapper for sky130_hilas_capacitorSize02.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorSize02 (
    CAPTERM02,
    CAPTERM01,
    VNB,
    VPB
);
        inout CAPTERM02;
        inout CAPTERM01;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_capacitorSize02 (
    CAPTERM02,
    CAPTERM01
);
        inout CAPTERM02;
        inout CAPTERM01;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CAPACITORSIZE02


//--------EOF---------

`ifndef SKY130_HILAS_PFETMIRROR02
`define SKY130_HILAS_PFETMIRROR02

/**
 * sky130_hilas_pFETmirror02: second pFET current mirror
 *
 * Verilog wrapper for sky130_hilas_pFETmirror02.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETmirror02 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_pFETmirror02 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_PFETMIRROR02


//--------EOF---------

`ifndef SKY130_HILAS_WTABLOCKSAMPLE01
`define SKY130_HILAS_WTABLOCKSAMPLE01

/**
 * sky130_hilas_WTAblockSample01: None
 *
 * Verilog wrapper for sky130_hilas_WTAblockSample01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_WTAblockSample01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_WTAblockSample01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_WTABLOCKSAMPLE01


//--------EOF---------

`ifndef SKY130_HILAS_TOPPROTECTSTRUCTURE
`define SKY130_HILAS_TOPPROTECTSTRUCTURE

/**
 * sky130_hilas_TopProtectStructure: top level test structure with protection (duplicate of TopLevelProtectStructure)
 *
 * Verilog wrapper for sky130_hilas_TopProtectStructure.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TopProtectStructure (
    ANALOG00,
    ANALOG01,
    ANALOG02,
    ANALOG03,
    ANALOG04,
    ANALOG05,
    ANALOG06,
    ANALOG07,
    ANALOG08,
    ANALOG09,
    ANALOG10,
    IO07,
    IO08,
    IO09,
    IO10,
    IO11,
    IO12,
    IO13,
    IO25,
    IO26,
    IO27,
    IO28,
    IO29,
    IO30,
    IO31,
    IO32,
    IO33,
    IO34,
    IO35,
    IO36,
    IO37,
    LADATA16,
    LADATAIN00,
    LADATAIN01,
    LADATAIN02,
    LADATAIN03,
    LADATAOUT00,
    LADATAOUT01,
    LADATAOUT02,
    LADATAOUT03,
    LADATAOUT04,
    LADATAOUT05,
    LADATAOUT06,
    LADATAOUT07,
    LADATAOUT08,
    LADATAOUT09,
    LADATAOUT10,
    LADATAOUT11,
    LADATAOUT12,
    LADATAOUT13,
    LADATAOUT14,
    LADATAOUT15,
    LADATAOUT17,
    LADATAOUT18,
    LADATAOUT19,
    LADATAOUT20,
    LADATAOUT21,
    LADATAOUT22,
    LADATAOUT23,
    LADATAOUT24,
    VCCA,
    VDDA1,
    VSSA1,
    VNB,
    VPB
);
        inout ANALOG00;
        inout ANALOG01;
        inout ANALOG02;
        inout ANALOG03;
        inout ANALOG04;
        inout ANALOG05;
        inout ANALOG06;
        inout ANALOG07;
        inout ANALOG08;
        inout ANALOG09;
        inout ANALOG10;
        inout IO07;
        inout IO08;
        inout IO09;
        inout IO10;
        inout IO11;
        inout IO12;
        inout IO13;
        inout IO25;
        inout IO26;
        inout IO27;
        inout IO28;
        inout IO29;
        inout IO30;
        inout IO31;
        inout IO32;
        inout IO33;
        inout IO34;
        inout IO35;
        inout IO36;
        inout IO37;
        inout LADATA16;
        inout LADATAIN00;
        inout LADATAIN01;
        inout LADATAIN02;
        inout LADATAIN03;
        inout LADATAOUT00;
        inout LADATAOUT01;
        inout LADATAOUT02;
        inout LADATAOUT03;
        inout LADATAOUT04;
        inout LADATAOUT05;
        inout LADATAOUT06;
        inout LADATAOUT07;
        inout LADATAOUT08;
        inout LADATAOUT09;
        inout LADATAOUT10;
        inout LADATAOUT11;
        inout LADATAOUT12;
        inout LADATAOUT13;
        inout LADATAOUT14;
        inout LADATAOUT15;
        inout LADATAOUT17;
        inout LADATAOUT18;
        inout LADATAOUT19;
        inout LADATAOUT20;
        inout LADATAOUT21;
        inout LADATAOUT22;
        inout LADATAOUT23;
        inout LADATAOUT24;
        inout VCCA;
        inout VDDA1;
        inout VSSA1;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_TopProtectStructure (
    ANALOG00,
    ANALOG01,
    ANALOG02,
    ANALOG03,
    ANALOG04,
    ANALOG05,
    ANALOG06,
    ANALOG07,
    ANALOG08,
    ANALOG09,
    ANALOG10,
    IO07,
    IO08,
    IO09,
    IO10,
    IO11,
    IO12,
    IO13,
    IO25,
    IO26,
    IO27,
    IO28,
    IO29,
    IO30,
    IO31,
    IO32,
    IO33,
    IO34,
    IO35,
    IO36,
    IO37,
    LADATA16,
    LADATAIN00,
    LADATAIN01,
    LADATAIN02,
    LADATAIN03,
    LADATAOUT00,
    LADATAOUT01,
    LADATAOUT02,
    LADATAOUT03,
    LADATAOUT04,
    LADATAOUT05,
    LADATAOUT06,
    LADATAOUT07,
    LADATAOUT08,
    LADATAOUT09,
    LADATAOUT10,
    LADATAOUT11,
    LADATAOUT12,
    LADATAOUT13,
    LADATAOUT14,
    LADATAOUT15,
    LADATAOUT17,
    LADATAOUT18,
    LADATAOUT19,
    LADATAOUT20,
    LADATAOUT21,
    LADATAOUT22,
    LADATAOUT23,
    LADATAOUT24,
    VCCA,
    VDDA1,
    VSSA1
);
        inout ANALOG00;
        inout ANALOG01;
        inout ANALOG02;
        inout ANALOG03;
        inout ANALOG04;
        inout ANALOG05;
        inout ANALOG06;
        inout ANALOG07;
        inout ANALOG08;
        inout ANALOG09;
        inout ANALOG10;
        inout IO07;
        inout IO08;
        inout IO09;
        inout IO10;
        inout IO11;
        inout IO12;
        inout IO13;
        inout IO25;
        inout IO26;
        inout IO27;
        inout IO28;
        inout IO29;
        inout IO30;
        inout IO31;
        inout IO32;
        inout IO33;
        inout IO34;
        inout IO35;
        inout IO36;
        inout IO37;
        inout LADATA16;
        inout LADATAIN00;
        inout LADATAIN01;
        inout LADATAIN02;
        inout LADATAIN03;
        inout LADATAOUT00;
        inout LADATAOUT01;
        inout LADATAOUT02;
        inout LADATAOUT03;
        inout LADATAOUT04;
        inout LADATAOUT05;
        inout LADATAOUT06;
        inout LADATAOUT07;
        inout LADATAOUT08;
        inout LADATAOUT09;
        inout LADATAOUT10;
        inout LADATAOUT11;
        inout LADATAOUT12;
        inout LADATAOUT13;
        inout LADATAOUT14;
        inout LADATAOUT15;
        inout LADATAOUT17;
        inout LADATAOUT18;
        inout LADATAOUT19;
        inout LADATAOUT20;
        inout LADATAOUT21;
        inout LADATAOUT22;
        inout LADATAOUT23;
        inout LADATAOUT24;
        inout VCCA;
        inout VDDA1;
        inout VSSA1;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_TOPPROTECTSTRUCTURE


//--------EOF---------

`ifndef SKY130_HILAS_CAPMODULE01
`define SKY130_HILAS_CAPMODULE01

/**
 * sky130_hilas_CapModule01: None
 *
 * Verilog wrapper for sky130_hilas_CapModule01.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_CapModule01 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_CapModule01 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CAPMODULE01


//--------EOF---------

`ifndef SKY130_HILAS_CAPMODULE03
`define SKY130_HILAS_CAPMODULE03

/**
 * sky130_hilas_CapModule03: None
 *
 * Verilog wrapper for sky130_hilas_CapModule03.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_CapModule03 (
    VNB,
    VPB
);
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_CapModule03 (
    
);
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_CAPMODULE03


//--------EOF---------

`ifndef SKY130_HILAS_NFETLARGE
`define SKY130_HILAS_NFETLARGE

/**
 * sky130_hilas_nFETLarge: Single Large (W//L=100) nFET Transistor
 *
 * Verilog wrapper for sky130_hilas_nFETLarge.
 *
 * WARNING: This file is autogenerated, do not modify directly!
 */

`timescale 1ns / 1ps
`default_nettype none


`ifdef USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETLarge (
    GATE,
    SOURCE,
    DRAIN,
    VGND,
    VNB,
    VPB
);
        inout GATE;
        inout SOURCE;
        inout DRAIN;
        inout VGND;
        inout VNB;
        inout VPB;
endmodule
`endcelldefine

/*********************************************************/
`else // If not USE_POWER_PINS
/*********************************************************/

`celldefine
module sky130_hilas_nFETLarge (
    GATE,
    SOURCE,
    DRAIN
);
        inout GATE;
        inout SOURCE;
        inout DRAIN;
endmodule
`endcelldefine

/*********************************************************/
`endif // USE_POWER_PINS

`default_nettype wire
`endif  // SKY130_HILAS_NFETLARGE


//--------EOF---------